<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0505.1445                               -->
<workbook source-build='10.2.2 (10200.17.0505.1445)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='Rep votes Parameter' datatype='real' name='[Rep votes Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.67471115557778905'>
        <calculation class='tableau' formula='0.67471115557778905' />
        <range max='0.68169999999999997' min='0.59999999999999998' />
      </column>
    </datasource>
    <datasource caption='belief' inline='true' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='belief' name='textscan.0owr2x51rpmq7q12emyif1m7yb5l'>
            <connection class='textscan' directory='C:/Users/aksha/Desktop/dash' filename='belief.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0owr2x51rpmq7q12emyif1m7yb5l' name='belief.csv' table='[belief#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='real' name='happeningOppose' ordinal='3' />
            <column datatype='real' name='happening' ordinal='4' />
            <column datatype='integer' name='TotalPop' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>happeningOppose</remote-name>
            <remote-type>5</remote-type>
            <local-name>[happeningOppose]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>happeningOppose</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>happening</remote-name>
            <remote-type>5</remote-type>
            <local-name>[happening]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>happening</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPop]</local-name>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias>TotalPop</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[belief.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
      <column caption='Happening' datatype='real' name='[happening]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/aksha/OneDrive/Documents/My Tableau Repository/Datasources/belief.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 11:07:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4493' timestamp-start='2017-05-26 23:07:21.102' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>belief.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4493</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10091278.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2246.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>4492</statistic>
                <statistic aggregation='Stdev' datatype='real'>1297.1617092714384</statistic>
                <statistic aggregation='StdevP' datatype='real'>1297.0173476095067</statistic>
                <statistic aggregation='Var' datatype='real'>1682628.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1682254.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='Median' datatype='integer'>2246</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30223377610.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4493.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4493.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalPop</remote-name>
              <remote-type>3</remote-type>
              <local-name>[TotalPop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalPop</remote-alias>
              <ordinal>2</ordinal>
              <family>belief.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3798</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1831540539.0</statistic>
                <statistic aggregation='Avg' datatype='real'>407643.12018695747</statistic>
                <statistic aggregation='Min' datatype='integer'>67</statistic>
                <statistic aggregation='Max' datatype='integer'>338629800</statistic>
                <statistic aggregation='Stdev' datatype='real'>5881263.4154568668</statistic>
                <statistic aggregation='StdevP' datatype='real'>5880608.8872243073</statistic>
                <statistic aggregation='Var' datatype='real'>34589259361991.375</statistic>
                <statistic aggregation='VarP' datatype='real'>34581560884501.504</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.5612156795413213e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>3</ordinal>
              <family>belief.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2776</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville County&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach County&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>happeningOppose</remote-name>
              <remote-type>5</remote-type>
              <local-name>[happeningOppose]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>happeningOppose</remote-alias>
              <ordinal>4</ordinal>
              <family>belief.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3787</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>68618.469999999652</statistic>
                <statistic aggregation='Avg' datatype='real'>15.272305809036201</statistic>
                <statistic aggregation='Min' datatype='real'>3.0389999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>27.614000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.1385574821318398</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.1380969003617727</statistic>
                <statistic aggregation='Var' datatype='real'>17.127658032909437</statistic>
                <statistic aggregation='VarP' datatype='real'>17.123845956783708</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1124899.697872</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>happening</remote-name>
              <remote-type>5</remote-type>
              <local-name>[happening]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>happening</remote-alias>
              <ordinal>5</ordinal>
              <family>belief.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3874</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>294288.45199999982</statistic>
                <statistic aggregation='Avg' datatype='real'>65.499321611395459</statistic>
                <statistic aggregation='Min' datatype='real'>48.788000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>85.540999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.6725686971077112</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.6719373945964797</statistic>
                <statistic aggregation='Var' datatype='real'>32.178035623406274</statistic>
                <statistic aggregation='VarP' datatype='real'>32.170873808221899</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19420237.700088046</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>belief.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4493</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;MO&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.31877' measure-ordering='alphabetic' measure-percentage='0.487055' parameter-percentage='0.194175' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='eventcount' inline='true' name='federated.0o4bil00qekusb12kk3590591imd' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='eventcount' name='textscan.1bbhjfl0aianbv1eh8sx70wpe7y1'>
            <connection class='textscan' directory='C:/Users/aksha/Desktop/dash' filename='eventcount.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bbhjfl0aianbv1eh8sx70wpe7y1' name='eventcount.csv' table='[eventcount#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State Name' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='event_count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[eventcount.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[eventcount.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[event_count]</local-name>
            <parent-name>[eventcount.csv]</parent-name>
            <remote-alias>event_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[eventcount.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Event Count' datatype='integer' name='[event_count]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[event_count]' derivation='Sum' name='[sum:event_count:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/aksha/OneDrive/Documents/My Tableau Repository/Datasources/eventcount.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 11:09:36 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='52' timestamp-start='2017-05-26 23:09:36.981' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>52.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>52.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Name</remote-alias>
              <ordinal>1</ordinal>
              <family>eventcount.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Nebraska&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[event_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_count</remote-alias>
              <ordinal>2</ordinal>
              <family>eventcount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1940.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.307692307692307</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>90</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.242335145018142</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.037090378605903</statistic>
                <statistic aggregation='Var' datatype='real'>451.23680241327298</statistic>
                <statistic aggregation='VarP' datatype='real'>442.55917159763311</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>95390.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>3</ordinal>
              <family>eventcount.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.415858' parameter-percentage='0.250809' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
        <column-instance column='[happeningOppose]' derivation='Avg' name='[avg:happeningOppose:qk]' pivot='key' type='quantitative' />
        <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='county_results' inline='true' name='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='county_results' name='textscan.0a0pq5z05gl2ew1726oyg0ymavnx'>
            <connection class='textscan' directory='C:/Users/aksha/Desktop/dash' filename='county_results.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0a0pq5z05gl2ew1726oyg0ymavnx' name='county_results.csv' table='[county_results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='percent_dem' ordinal='1' />
            <column datatype='real' name='percent_gop' ordinal='2' />
            <column datatype='string' name='state_abbr' ordinal='3' />
            <column datatype='string' name='GeoName' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_dem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_dem]</local-name>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias>percent_dem</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_gop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_gop]</local-name>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias>percent_gop</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_abbr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_abbr]</local-name>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias>state_abbr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GeoName]</local-name>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias>GeoName</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[county_results.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Dem' datatype='real' name='[percent_dem]' role='measure' type='quantitative' />
      <column caption='Percent Gop' datatype='real' name='[percent_gop]' role='measure' type='quantitative' />
      <column caption='State Abbr' datatype='string' name='[state_abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/aksha/OneDrive/Documents/My Tableau Repository/Datasources/county_results.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 11:10:15 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3113' timestamp-start='2017-05-26 23:10:15.046' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>county_results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3113</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4843828.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1556.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3112</statistic>
                <statistic aggregation='Stdev' datatype='real'>898.79001997129456</statistic>
                <statistic aggregation='StdevP' datatype='real'>898.64564762758403</statistic>
                <statistic aggregation='Var' datatype='real'>807823.5</statistic>
                <statistic aggregation='VarP' datatype='real'>807564.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
                <statistic aggregation='Median' datatype='integer'>1556</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10050943100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GeoName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GeoName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GeoName</remote-alias>
              <ordinal>1</ordinal>
              <family>county_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1848</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville County&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach County&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3113.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_dem</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_dem]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_dem</remote-alias>
              <ordinal>3</ordinal>
              <family>county_results.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3112</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>987.13722145400232</statistic>
                <statistic aggregation='Avg' datatype='real'>0.31710158093607527</statistic>
                <statistic aggregation='Min' datatype='real'>0.031446541000000001</statistic>
                <statistic aggregation='Max' datatype='real'>0.92846591899999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15356510948711785</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.1535404423743594</statistic>
                <statistic aggregation='Var' datatype='real'>0.023582242851790496</statistic>
                <statistic aggregation='VarP' datatype='real'>0.023574667444513982</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>386.41071327868076</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_gop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_gop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_gop</remote-alias>
              <ordinal>4</ordinal>
              <family>county_results.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3112</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1980.1781566199986</statistic>
                <statistic aggregation='Avg' datatype='real'>0.6360996327079983</statistic>
                <statistic aggregation='Min' datatype='real'>0.041220671</statistic>
                <statistic aggregation='Max' datatype='real'>0.95272727300000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15650394346762297</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.156478804290934</statistic>
                <statistic aggregation='Var' datatype='real'>0.024493484320916928</statistic>
                <statistic aggregation='VarP' datatype='real'>0.024485616192320422</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1335.8143213290757</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_abbr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_abbr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_abbr</remote-alias>
              <ordinal>5</ordinal>
              <family>county_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3113</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;MS&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.305825' measure-ordering='alphabetic' measure-percentage='0.472492' parameter-percentage='0.221683' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='rep_votes' inline='true' name='federated.1h244m20t7tx9l121a2011id20p0' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='rep_votes' name='textscan.1s78ntf0b7je4q1dektry13251uv'>
            <connection class='textscan' directory='C:/Users/aksha/Desktop/dash' filename='rep_votes.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s78ntf0b7je4q1dektry13251uv' name='rep_votes.csv' table='[rep_votes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Rep_votes' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[rep_votes.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rep_votes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rep_votes]</local-name>
            <parent-name>[rep_votes.csv]</parent-name>
            <remote-alias>Rep_votes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rep_votes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Rep votes' datatype='real' name='[Rep_votes]' role='measure' type='quantitative' />
      <column datatype='string' name='[Republic states]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Rep_votes]' new-bin='true' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/aksha/OneDrive/Documents/My Tableau Repository/Datasources/rep_votes.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 11:09:57 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Republic states]' formula='STR([Rep_votes])' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2017-05-26 23:09:57.120' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>51.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rep_votes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rep_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rep_votes</remote-alias>
              <ordinal>1</ordinal>
              <family>rep_votes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24.613100000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>0.48260980392156866</statistic>
                <statistic aggregation='Min' datatype='real'>0.040899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>0.68169999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.11918342712793893</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.11800917753426825</statistic>
                <statistic aggregation='Var' datatype='real'>0.01420468930196073</statistic>
                <statistic aggregation='VarP' datatype='real'>0.013926165982314442</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>12.58875783</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>2</ordinal>
              <family>rep_votes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Missouri&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Republic states</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Republic states]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Republic states</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.040899999999999999&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0.68169999999999997&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;0.48170000000000002&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.294498' measure-ordering='alphabetic' measure-percentage='0.466019' parameter-percentage='0.239482' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0o4bil00qekusb12kk3590591imd'>
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o'>
      <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_abbr]' derivation='None' name='[none:state_abbr:nk]' pivot='key' type='nominal' />
      <column caption='State Abbr' datatype='string' name='[state_abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1h244m20t7tx9l121a2011id20p0'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0n1f8du1f0ue0712tsa910x3xoqg' target='federated.0o4bil00qekusb12kk3590591imd'>
      <column-mapping>
        <map key='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]' value='[federated.0o4bil00qekusb12kk3590591imd].[none:State Name:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o' target='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
      <column-mapping>
        <map key='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' value='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' />
        <map key='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:state_abbr:nk]' value='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.0o4bil00qekusb12kk3590591imd' target='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o'>
      <column-mapping>
        <map key='[federated.0o4bil00qekusb12kk3590591imd].[none:State Name:nk]' value='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.1h244m20t7tx9l121a2011id20p0' target='federated.0o4bil00qekusb12kk3590591imd'>
      <column-mapping>
        <map key='[federated.1h244m20t7tx9l121a2011id20p0].[none:State:nk]' value='[federated.0o4bil00qekusb12kk3590591imd].[none:state:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1h244m20t7tx9l121a2011id20p0'>
      <datasources>
        <datasource caption='rep_votes' name='federated.1h244m20t7tx9l121a2011id20p0' />
      </datasources>
      <datasource-dependencies datasource='federated.1h244m20t7tx9l121a2011id20p0'>
        <column caption='Rep votes' datatype='real' name='[Rep_votes]' role='measure' type='quantitative' />
        <column-instance column='[Rep_votes]' derivation='Avg' name='[avg:Rep_votes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]' included-values='in-range'>
        <min>0.040899999999999999</min>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - disasters- climate-votes' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='State,State Name' />
        <param name='target' value='Dashboard - disasters- climate-votes' />
      </command>
    </action>
    <action caption='&lt;FILTERVALUES([State Name])&gt;' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - disasters- climate-votes' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='State,State Name' />
        <param name='target' value='Dashboard - disasters- climate-votes' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Climate Change Oppose'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Climate  Change Oppose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='belief' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
            <column-instance column='[happeningOppose]' derivation='Avg' name='[avg:happeningOppose:qk]' pivot='key' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Latitude (generated)]</column>
            <column>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Longitude (generated)]' field-type='quantitative' max='-7798758.6855228133' min='-15092076.691559158' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Latitude (generated)]' field-type='quantitative' max='6533724.4766357113' min='2764460.1485031773' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' />
              <lod column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]' />
              <lod column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' />
              <geometry column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Latitude (generated)]</rows>
        <cols>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Climatic Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='eventcount' name='federated.0o4bil00qekusb12kk3590591imd' />
            <datasource caption='belief' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
            <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[happeningOppose]' derivation='Sum' name='[sum:happeningOppose:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o4bil00qekusb12kk3590591imd'>
            <column caption='Event Count' datatype='integer' name='[event_count]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[event_count]' derivation='Sum' name='[sum:event_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[sum:happeningOppose:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0o4bil00qekusb12kk3590591imd].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[sum:happeningOppose:qk]</column>
            <column>[federated.0o4bil00qekusb12kk3590591imd].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&#10;State Name:&#9;&lt;[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]&gt;&#10;Event Count:&#9;</run>
                <run bold='true'>&lt;[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]</rows>
        <cols>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Happening &amp; Republican Votes'>
      <table>
        <view>
          <datasources>
            <datasource caption='county_results' name='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o' />
            <datasource caption='belief' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' />
          </datasources>
          <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[happeningOppose]' derivation='Sum' name='[sum:happeningOppose:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o'>
            <column caption='Percent Gop' datatype='real' name='[percent_gop]' role='measure' type='quantitative' />
            <column-instance column='[percent_gop]' derivation='Sum' name='[sum:percent_gop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]' />
              <lod column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'>&lt;[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&#10;Happening Oppose:&#9;</run>
                <run bold='true'>&lt;[federated.0n1f8du1f0ue0712tsa910x3xoqg].[sum:happeningOppose:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Percent Gop:&#9;</run>
                <run bold='true'>&lt;[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[sum:percent_gop:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[sum:percent_gop:qk]</rows>
        <cols>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[sum:happeningOppose:qk]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[state]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Happening Oppose Scenario'>
      <table>
        <view>
          <datasources>
            <datasource caption='rep_votes' name='federated.1h244m20t7tx9l121a2011id20p0' />
            <datasource caption='belief' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
            <column-instance column='[happeningOppose]' derivation='Avg' name='[avg:happeningOppose:qk]' pivot='key' type='quantitative' />
            <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h244m20t7tx9l121a2011id20p0'>
            <column caption='Rep votes' datatype='real' name='[Rep_votes]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Rep_votes]' derivation='Avg' name='[avg:Rep_votes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rep_votes]' derivation='Sum' name='[sum:Rep_votes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' included-values='all' />
          <slices>
            <column>[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]</column>
            <column>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1h244m20t7tx9l121a2011id20p0].[Longitude (generated)]' field-type='quantitative' max='-4765028.9924095199' min='-18376033.837100238' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1h244m20t7tx9l121a2011id20p0].[Latitude (generated)]' field-type='quantitative' max='7509480.5401170719' min='2681363.8094943357' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]' num-steps='8' palette='red_blue_white_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' num-steps='4' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' />
              <text column='[federated.1h244m20t7tx9l121a2011id20p0].[none:State:nk]' />
              <lod column='[federated.1h244m20t7tx9l121a2011id20p0].[sum:Rep_votes:qk]' />
              <geometry column='[federated.1h244m20t7tx9l121a2011id20p0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h244m20t7tx9l121a2011id20p0].[Latitude (generated)]</rows>
        <cols>[federated.1h244m20t7tx9l121a2011id20p0].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Voting preference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rebuplican Votes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='county_results' name='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o'>
            <column caption='Geo Name' datatype='string' name='[GeoName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[percent_gop]' derivation='Avg' name='[avg:percent_gop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoName]' derivation='None' name='[none:GeoName:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_abbr]' derivation='None' name='[none:state_abbr:nk]' pivot='key' type='nominal' />
            <column caption='Percent Gop' datatype='real' name='[percent_gop]' role='measure' type='quantitative' />
            <column caption='State Abbr' datatype='string' name='[state_abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]</column>
            <column>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]' field-type='quantitative' max='-7199765.8888139036' min='-14727669.575607654' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]' field-type='quantitative' max='6524350.3572802339' min='2898779.096361185' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[avg:percent_gop:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[avg:percent_gop:qk]' />
              <lod column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:state_abbr:nk]' />
              <lod column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[none:GeoName:nk]' />
              <geometry column='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]</rows>
        <cols>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard - climate- votes'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='48750' id='1' name='Climate Change Oppose' w='46000' x='3300' y='8625' />
        <zone h='10938' id='2' name='Climate Change Oppose' pane-specification-id='0' param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' type='color' w='13982' x='35139' y='5729' />
        <zone h='47250' id='3' name='Voting preference' w='47500' x='50100' y='9375' />
        <zone h='11000' id='4' name='Voting preference' pane-specification-id='0' param='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[avg:percent_gop:qk]' type='color' w='14000' x='81600' y='6000' />
        <zone h='52604' id='5' name='Happening &amp; Republican Votes' w='81259' x='6076' y='58073' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard - disasters- climate-votes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relating Climate Change Oppose, Climatic Disasters and Rebuplican votes </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='belief' name='federated.0n1f8du1f0ue0712tsa910x3xoqg' />
        <datasource caption='rep_votes' name='federated.1h244m20t7tx9l121a2011id20p0' />
      </datasources>
      <datasource-dependencies datasource='federated.0n1f8du1f0ue0712tsa910x3xoqg'>
        <column-instance column='[happeningOppose]' derivation='Avg' name='[avg:happeningOppose:qk]' pivot='key' type='quantitative' />
        <column caption='Happening Oppose' datatype='real' name='[happeningOppose]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1h244m20t7tx9l121a2011id20p0'>
        <column caption='Rep votes' datatype='real' name='[Rep_votes]' role='measure' type='quantitative' />
        <column-instance column='[Rep_votes]' derivation='Avg' name='[avg:Rep_votes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='18' param='vert' type='layout-flow' w='99600' x='0' y='0'>
              <zone fixed-size='804' h='100000' id='15' is-fixed='true' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                <zone h='100000' id='11' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                  <zone h='100000' id='8' param='vert' type='layout-flow' w='99600' x='0' y='0'>
                    <zone h='12000' id='7' type='title' w='99600' x='0' y='0' />
                    <zone fixed-size='285' h='36625' id='12' is-fixed='true' name='Climatic Disasters' w='99600' x='0' y='12000'>
                      <layout-cache minheight='240' type-h='scalable' type-w='cell' />
                    </zone>
                    <zone h='50875' id='19' name='Happening Oppose Scenario' w='99600' x='0' y='48625'>
                      <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='8125' id='23' name='Happening Oppose Scenario' param='[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='81600' y='75750' />
        <zone h='8125' id='22' name='Happening Oppose Scenario' param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='81800' y='86125' />
        <zone h='11000' id='24' name='Happening Oppose Scenario' pane-specification-id='0' param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' type='color' w='14000' x='2600' y='76500' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Are Republicans Climate Change Denialists? </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='417' />
        </style-rule>
      </style>
      <size maxheight='1068' maxwidth='1366' minheight='1068' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5058' id='6' type='title' w='100000' x='0' y='0' />
            <zone h='94567' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='5058'>
              <zone h='10207' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5058' />
              <zone h='84360' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15265'>
                <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Comparison of Republican votes and belief in climate change' captured-sheet='Dashboard - climate- votes' id='1'>
                      <capturedDeltas>
                        <worksheet name='Happening &amp; Republican Votes'>
                          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[sum:happeningOppose:qk]' included-values='non-null' />
                        </worksheet>
                        <worksheet name='Sheet 1'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Latitude (generated)]' field-type='quantitative' max='6645547.9145339206' min='2876350.456154529' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[Longitude (generated)]' field-type='quantitative' max='-7020547.1925498694' min='-14276793.489856582' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                        <worksheet name='Sheet 2'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]' field-type='quantitative' max='7634445.9134709407' min='1490607.1648943056' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]' field-type='quantitative' max='-1495905.2918283008' min='-14264302.703694601' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                        <worksheet name='Voting preference'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Latitude (generated)]' field-type='quantitative' max='6427250.3407949395' min='2792552.8349543135' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[Longitude (generated)]' field-type='quantitative' max='-7531616.133454591' min='-15080603.087910244' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Mapping Climatic Disasters - Climate Change Oppose - Voting Preference ' captured-sheet='Dashboard - disasters- climate-votes' id='2'>
                      <capturedDeltas>
                        <worksheet name='Happening Oppose Scenario'>
                          <filter class='quantitative' column='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' included-values='all' />
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1h244m20t7tx9l121a2011id20p0].[Latitude (generated)]' field-type='quantitative' max='7551102.2360707168' min='725144.09967305441' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1h244m20t7tx9l121a2011id20p0].[Longitude (generated)]' field-type='quantitative' max='-1019431.1769623496' min='-20290276.976165272' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Climate Change Oppose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Voting preference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[avg:percent_gop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zlbf5t1gx5w1v13qgpwg0jd4q3o].[avg:percent_gop:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard - climate- votes'>
      <viewpoints>
        <viewpoint name='Climate Change Oppose'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Happening &amp; Republican Votes'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Voting preference'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='Happening &amp; Republican Votes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Climatic Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]</field>
            <field>[federated.0o4bil00qekusb12kk3590591imd].[:Measure Names]</field>
            <field>[federated.0o4bil00qekusb12kk3590591imd].[none:state:nk]</field>
            <field>[federated.0o4bil00qekusb12kk3590591imd].[sum:event_count:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Happening Oppose Scenario'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[avg:happeningOppose:qk]</field>
            <field>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:county:nk]</field>
            <field>[federated.0n1f8du1f0ue0712tsa910x3xoqg].[none:state:nk]</field>
            <field>[federated.0o4bil00qekusb12kk3590591imd].[none:State Name:nk]</field>
            <field>[federated.1h244m20t7tx9l121a2011id20p0].[avg:Rep_votes:qk]</field>
            <field>[federated.1h244m20t7tx9l121a2011id20p0].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard - disasters- climate-votes'>
      <viewpoints>
        <viewpoint name='Climatic Disasters'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Happening Oppose Scenario'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='22' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Climate Change Oppose' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy92a8lx5ng94uI3M5+91pYVSSLRVKkSFF790hCL2r0hjHc47FhNAaw4Xny
      kx/8L/jFgJ/8ZhswbMOwjcZgjLFbbnUPetfSarXU2iiJRYpULazt7vfsuUWEH/Jknjx58pxb
      1CytZt+PKJ578kRGRkZ8X3z7F2I4HFrXdfm7hjAMSZIEIQS+7zMaj/F9n2ajsdQ2TVOm0ynW
      WoQQAFhrkUriKIc4jovrZbDWZp9AlEQIBJ7rIStt83ZA0Y8xprbPumtlMMYgpWQ6nRIEAUKI
      hf6fpo/ye5bHV71Wnou656x7Zvn+JElwHGepbd0z1o23rk157Kv6yNvkcy6lXJh/KSWtVguA
      KIpIkmTpeg7GGCaTycL95XlxXNfF9/36Wfr3CEII0jRFSpkRghQ0mw18b3lscRzjOA5CCLTW
      xf05KKWKCa5D5jCOMNYCFiGyiStD+R5rLVLKlYu9DnmttTiOg7UWpRRJkuD7PlLKpXHlhFLX
      R96mFqmFQJbeddW7lJGtjHxVYsqfk79zFelzyJ+zjhCq48/HV0bsdffkn+WxSClxHAcpJVpr
      tNZFP67r4nne0sagtSaKotpNZE7mf8fgOA5BEBBFUYY4UqGkWmpnjMF1XZIkIQiCggDyCaku
      eHWhE52SGr1wrcwZyktZ3f3rEHDVLltFmpwQLLYY87ytXOJC5X6qiHrW72fj0oYojum026Q6
      xVEOo/GIzY0NJtMpvW63QI66nbuMPOU21XerEmv1ek68qzhPFfHOI/Qc8jXN5991XVqt1sIG
      F0VRMZ/5plh9dqPRIAzDeg6wNJK/I5BS4nkeSZIsIUi1Xc6xxuMxnueRpmnBsvN7qxNqrSVM
      4mWkt5CYlFRrtNE0/QAp5jt+3aTlUEUGIQTGGuI0xXfcBaRwnEw0C6chSAGztjk4SuEpd+Wu
      WF7YbDElruuAgNP+GVJIgiCg3W4Txwmnp2c0m018z6vd/fO5rOu/umuvGkuZc9Vx2jrusU6E
      qhK6EGJBHEvTlCiKaDabRRtv9n4AQRDUzp2UEuUokiRduG6sQYRhaH8eRCDIJmU0GpEkCa7r
      Yoyh2+2ulBOn02nxPZcD0zRdK5tOoim6tKPn1wUCz3FxZ5NdXfzz5Ov8WpwmxGmCQBB4PmrG
      vnNEEUJwNuij0xTX90HM+1ZS4rv+gkgD1CJYmTNYawtRyBhDHdSJQuVxlz+jKCpEiQ86B7DI
      MdeNo0yA+XuUiUtKyWQywfd9hBAopdBaEwQBQRAU4pSUkjRNC85QB3Ec8+ToYGksPzccAOYU
      naZpoRBHUVRL2Tlry3cFpRRRFC20qdtlfNcnThNSnS70FXg+Spwvk54nt3qOS6o1xhq00agS
      F4CZCOd5eL5PHEU4roslu1cbQ5zEBJ6/tCPnfZSJyRgzvw4zvWZxt80Jok7eXwVVAqkbR7nP
      VVxynX6wTg+pzmn+W6fTWbg3l+2llIRhiOd5+L6PMWZJHHJdF0c5xboXm8vamfg7AN/38Tzv
      qdrmokWz2aTRaCztAHULo6Qk8BYVUUeqAvnr7q9+5n+X/5WvN/0ARyriNGEah4XOkf8euBnb
      9nyPcDpdQILUaFKdLi1+VSktE0SZE9Tt8NV5KLfN26zSZermvHp/FYHzsa4ijPJvVY5VJxbl
      7bTO5jH/lFIWeqPWmul0WnCCOsg3mjL83BEAUCAzUOx0qyCfiDAMF65LKZdYbHEP4Dte8Xui
      UywwjUPCOCJKYpI0WSk2rJKLF5Dc82l4AdaCqxYZrZSShucjELQ7bdI4WZTxk5ikxKHWiT8L
      YlCpfR3RVq1Zq0SYdYp9lejrNoA6KI+xvJ5V4qvjKPm1OM50uDAMMcYsmDbzceSKfd04gpko
      RWnz+LkkgNyeO4lCxpPJubuTMaZQhoIgKIinzP7zz/IuVeyYZEThOm4mNliLKS1EVQYv911F
      vjIoKXEqu1F5t/RdD4EoLEDW2qLfOE2YROHC+MvPW4e85yHyeUpwHZHkY6tyjmqbOlhFJNV1
      WaU35PMfhiGnp6dEUUQcxwUnKO/4URSRpulSH0IINjo9Wn6DVtCk4foErv/zSQCQmbR2t7dJ
      dbpg3qwDKSWu69JsNheQtbwTVHctKTKlVwiByO3IysF3PRqej+e4a5W98vV1HMF3F8W5qqji
      KgclFdKCQCyYftcpddVdvtjRKsRaxw1W9VnHaVfNXy6Dl9/pPKgi+dMQa52OIIRgMpkUJtLq
      +45Go4UNKofch1D8rdTPLwEAeK5Hs9nkbNAvrDzrwPd9lFIEQVD4FXKoWlTEjACkENjSwtcp
      ZFXEqC5WHYdYtaBVsUyITPGXUoIxwByZvJnotG7Hr46vrl2dJaeufR0yrhM/qz6GVe3z8Ve5
      Zt3mUifOVTea3BiRWy/TNF0acy4ulUEIseD0tdb+fBMAQKvRxHVdTs5O1y5GDo7j4DgOWusi
      JCJnk3UT7ygHy+pFySd7HRKturYKGcrtjTEopfA9H8/1sMZitEYKCWvk7LLsX90l1+34ZTl8
      nXJaB1VRZRUHyp9TRd5q+7o5rXLW6vzn9+abRo781XFPJpMF51fdc+DnVAmuwka3R6/TfSoC
      yJHd9/0Fh1q+4FWzoOcsxkGts2yctxPn91W5TbV9ue8FjuR5NIMGgetjrWUah7VOwacZR928
      lJ+bi1flXb9MUHn7uveuKrNVhK2bwzrCqOuz2ld5/uvuX8dFkiQzZKTpXIzOzaP5vX8vCCBn
      XavMW1Ww1hZty0Fd1Tb5QrtOZotftXOWJyy/t/x7daznQdWylS9ubtXwPA9hMudcYvRchLCL
      DqYqJ6gTu8qK66odfp38Xdd2FfLVcYh1c7RKJ6kivZQSU3nHOI6BTE9aFcyptSZN08wDH84N
      Cq1Wq+jr58oRtg5WOaBWtS3Le6t2dcgQJJgpqk8rx6/7vYqU+TOqbL8sApUXOkesZrPJYDjI
      CKXZIJ2JRb7roc4JRKsqfqt21brd82lgHWGUd+q6MVbfvzqmMpSJN04TkjRBSTkzL2dKuFKK
      RqNRBMYlSbLA7UejEY7jFNEFecBcPi9/bwjgg4IQYsFTCstmv1ViRHl3W7U46/qpg1V9VblK
      GUHarTbGGsIoAinQRjOJpjT9ACXVApGVka/8zDr9YR1HWIesq55TfWZ1XsobwSrfTHV81TFX
      TdrWZtaeTqeD4zgLFrPBYFCYQoUQhbVIKTUPlZld/3shAv2skIfNlsMGqrAOgS0sOKQg89RW
      xaHzkKbqmClzgyo3qooYycwrLEpDTEt6QS5fl8eTy7t1SLj0jivk9rr2de+6ak6rc5DPQ931
      dZBHhPqOS8MLcKSzcL3f7zMajQqzaHX+c86QE9F4PM5izDodhPh7ogT/rOD7Po1GY62suVYu
      tpZUp4xnAXTGGMI4QluzcH+1z/z+ut23+oyyR9NimSZR4QADMMbiuC5xHC84+OpMn/m1ahzM
      OiRddb1uburet45z1RFR3RqcO/9QBMAppZBCFOJfua8kSQoHmBBZ2HR5/vN/w+Gw8AUopeh2
      uh9uAsgXoxoh+rRyrzYaXeIcUkpUDTdZJ4tXEbWqB5R379wJVu4qcD2MMVngX5RkO5/RxGmy
      9C6rdJ2qDrCqfV2b6vU6pbeuz+q91fE8zRrk87MQ9FezjvlnHgxZDqWp+h7KCrWU8sNNAJDt
      IO12e+XvVT2hDI5yCjNpMkM4R6oijr8sshS7eGUnLO98Vdm5ThFsuD7u7JlCZObKph/gKAfp
      KNIoxnXdhYjRHDGq9vIcqibEVVAeRx1Sr+J41Z08n4+8r/N0hlXi6apn1BFS+e8oilbGClX/
      /tApweWJzJ1hruvSbrcLU1hZZChPajUHFWZhFrNpslikVAi7aN+vQ7xVlp8660h5QbNdadnx
      IwQgIGg0mE6meB13iXDLRJfLvXWEXUXwVWLaqjaroMwpn5ZD5u3r2q3jJtX3gbkH2HVdlFK1
      m5IoiVFCiA8fAcA8EbocK95qteh0OhhjihwCYAH5YdnKUY0JUrJega2KG3VOsFVQVYTLoc85
      yFnapOu4pE66lM5Yx3lWIfaqFMZVxJL3X/d7dRMpt61TrvM+VxUZqM5ZdW3K71gXzDeZTOj1
      enS7XYbD4VJgXJXAPnQiUC42VJOjx+Mxw+GQ6XS6sDtAvRey2mcZzrOU5J9lHWDVDnreTlle
      dCUVgkzGnUynxHG85KmtU/6q71EnxlTHUkWUqg6wjmhW9VXmiNX+y0hex9Xq+q4T6cohMGXR
      t/ruURQRRdGHkwMAeJ5Hq9UiDMNigvOAulUxQrn1pC6tso4oCiS3tmCr51VLWId8xeIkMUqq
      pVDqInoVaLVapDrjZK7rrtzhVz23bnxVpKxD3PJvT/uO5T7Pa7OKMz0tNy3HB+UJM+XU2fy3
      nFA+tAQghCjigarJMuWdo7rb5NUb1inHeR+QpTGGSZQlpXteFsRWGcc6WKU0WzLCSnWa7Y5C
      FB5roMgb1qkuciHKiFpHBOXnVJ9fd21VqRZYriixjiPUKdbl61WoEtvPAqvEvyRJFkIjPrQE
      AHNxyHGcpWSO6m6U/7ZKeazujpMopOH5aJM5pVzHQbC8g9Yt/jrdwdpZDFCagpNxA2AhaC9v
      6zkusVl2eOW7X92z65C6brdfpUBX52wVQdVdL8v+VfGlPA9V+b5u3sr9VgkpjuPCMZZz+/Kz
      xuNx8feHTgeogu/7dLvdop5MDrmiqY0m1fM6QXnFgXXsOkpi7CzDNEtokThyOR+5bJ1YhVB1
      eoKjFIHrIZlbLBy5nFkmpcz0gcmkuCbEohWrLga/anasG1uZC9TNQ/6cOiRft6uXf6sjxOpz
      6p5dB1VOMZ3pSOeN60NPAPmLe55XpEuWdwQlFXEaFxUV0jTF8zwas5KMdZOWe4KjJKs2Frjz
      oLt1u2EdOy8jUrl9fj1wfZp+A22XwyTqxKfqjljHber8EasU/yrnK0MVYcvEVcdhq/fWKbzn
      cZ51UCbsOoKum/8PPQGUwfd9fD+Ltc8VR200xlqiJCJJ06JGaZ5mWa6Pk09gnjIJojaMOv+7
      upirdtp1uoYQlfTNFUiySlE8z1pTFX1W/V5+xjpkXiU6VkW0ctunQfhVOkG5nzrCPm/+/0ER
      AGTVw7rdLLkm1Zn4Y62dhTzMdvZZnaE8uwyWbc92ZvkxZo5gqxJ2ftZd7WnuOS9VdBVClpF5
      FVJXYZXhoNzfKjGv3D4XP6vBf6sg71eXRNU6gvpZ5v9DrQTXgRCiiAu3NpPk1Sy8Qc7k7DIH
      UErR7XaLYCutdVbJQUqSNEUgsJU6OLDawlE3nrx9WXnNr5U/q/1bm5lu62KdygrnumfX+SnW
      jX2dPF19p/L3sj5U127d82A5l3qdIv9B4OeqNOK/b0iSpBB56lhrLio1m83CeRbHcZFwbbGF
      2bOMpMZm3KWabnkePO0OWm6bf47H4yLTqdqm7u86yH/PwwmqY6gmu6zq42kIqE5/WTUXYRjS
      aDSWxMU6i9O6+avTZ/5BEwBQZA3lokR1QcrWFtd1i6yjVWCtJZ2ZRrPw3dVpnOsQ/mnl4vI4
      p9MpzWbzXIQ679l59tSqPs4b388y/nXXoyj6d1LC39oPcUbY04KUkk6nw3g8Lna4sucQ5uJG
      HMd869vfonW5wTf2/5JB0l/Zb6vRYKO3gSi8A/NPbPYtcH0EEoFgI/0E0mbFch3vhNQa3n20
      g7ElD6+1hbWqGL8QdJoeYEn0hO89/N/RZrFGag6+0+ZT1/45Ysa1mv6Ezc4RqU24H70Ns9KB
      eQnBR08OmFTmwlVdbvb+s4VrgSdx1HyckzDh4cFwoc3eRsDu5rxMjbGCsLKP9EcR02geuyNl
      1ud2N8BzJ8X4cnjn+P8k1gOEEGxvbyGFx3P+b6HEnHtJwJHZfafJXe5Nvln89tHuZy8IALJd
      v91uY61lMBjUig35LvTKR17h8PCQnfYeb91/c3WfI8F19xkcZzUHaIlmQXRaXycwVxByimvO
      SLRDKiVno4RUz73OpiJ9CAGRzT3ALhuNX+XNx7/HJDleep7vdLi+maBmWVUdG+I2RkRmymH8
      eKn9/f79JQJoOJfouosBZk0tcZ25TD6apDzuRwvEqqXAa84RUxuYxEDJeXg4jJmEeSpjLrII
      cB2CSnEMay0Pho8I0yMA4uYUJXw2iXBK3ENi8VQ2jij1eDx5WPx21T/9h2cFWgc5IeQVKHIx
      oCzzvnv/Pb55+i1IfD5/41doNBo0gsV/QRDM/AjnuPFL3D8S2UIKGc84BHju4sEZdb0F7pzA
      hJBsNl9gq/lC/fMswPmlZYrmdrlt13u5vtsStJseSi2KNmG8WN3PWksYJoRhXPwr39EKPNqN
      LPQjTmaKOnb+T0DgbBftjTFYDJZFSimPLZBdHFHmQvqCA1Qhryx3584dtre38TxvocqA9Sxf
      /t6/5gsv/AJONykcZmVwpceVzlWMSBnp1WJSGTybLaZJ2+CcklNHq6EIdLZPjcKUKFlEStdZ
      zjd+7crv4siAu6dfKa43A5/A80CNwVbKNa4gVMdxgUVxypHLyUV1p9tcv9zh3vD30Ta7vy8S
      3jyNeKn3nxKoTcIo4bs/fn/hnqt7kps3MpTsNlP64x7j0GccpqTGcnVD4TlgLURa8lzvd0g7
      IWA5lV8CElpOgi8TsKBFhBAWJbI3tGZCq+mRSf6CQ3n3ggDqwFrD9+JvsnFvmyveNTrtLp1O
      B2stHdr8z7/7P/D28Y/5o/v/D9bYhZ0cwFc+Hb+LtpqpGaPtcrHWKiyUaCr11/DnSxSlZokA
      lh5ORgTPb3+Rw8n3SG0mwrz24nNsb3QR/DE22YHh58pvnJ2KU+orNSnRLJSgDG3v5tLTVY0c
      0W54iPh9hJ2LUKGG22f/B0r46LgDfKYy/pQr2yE5PWnjs9XpzUdp8/cDVxo81WOkf8I4vUeY
      DHm593F6roMSGRdIRYgVpQICNqHTbGNmXMLwIY4G/TeB1GjeG95mqifs2Su8qF5FnEg2gi1a
      O02UkpxGx7h47J8cEKeLiHIgjrjUukLDb7DjX2Y/fABkiq/FonAXo0YtCDtfilVWRikEvisL
      IvCcReWzDL7b5Quv/DNs4wcgYxwpZ7imwduH7ldpuFeJbcrUjvCd0qEcFkyyfJYZSJRcPKzE
      dep9AqmdYG1KrvRbK7C6QShjhBxidAzkh+ZZPNchii3GatSsBIZSeqHvsv6TX56kDximb2fz
      QRNJJhIepw841u/jKZeOtwEzAcmjicVgMGibXBBAHXiOh6d8pnrCwfQxB9NMQRQTgT2xeD8N
      mJwltDZ8tpu7PDxbZOXP7j6LP4sPcqXHnv8Mk2TMVe8WqY1oyR6hmfKI29nz7Bae3QIgsVMG
      yT6SJtjni1AL4zwh8LYRwiFJE4y1SFlxvpGiOcVhN7M+RS/j28tc2b5f+CeO9UPG9gzcI47E
      KbnIvIDEAjzlLnAEACmcAsGKa3KxzWQ6S9wHNtUX8cQ1tNb89O4+Ou4CFrf9EOXGdDstLu9t
      cdofsbvVAwEPDifc2HuEEKCkhtLRhQsEkH+KOQr/8PSvCPWIK82bPDRvc6b3adkOjieKm170
      PomDx0Af8U7y7QsCqAMpJS/1PspX3v9ToCJkCMEwHnM6HPHFy1/kR/0fLN2/091dTKtUPg3V
      pkkbQRdtE05MHzn+HDgnpMJhqh2kjBmJOxzEb2OSNuH+y1gLG20Pf+dNxEaCPP4VGr5CG0vD
      UzNLFfTlH6LFAM0pG/o/wuUyYLH+HXzZIX+Rq+LF2V5oeV//CM0K8UwI5jQhuNT6ZXYan8WR
      3ZXzNp3G/NlXfsAnPv4y7VaDtvwEAIlN0XFY9JWMriM9l2vP7yKEYG9nY7Gf2GUSumitiBON
      na3ANAZPyWxcs8E11DYT3caiSYm43f82743epN1p4DhqSb8JGdFmi5bcZNe7ekEAq+DXnvtt
      /uKtv+DJcNk8COAoyf3Tu7x57z6pWUSiy70jtrtzC4WLT5vtQs4fckJsJxBfg/gaBssZAi2n
      DIPvFfdlcUaC02HMzqbG8/o4nbdg8EbRxlqYyO8QiTsgZodryAe45jJWxMTqLtZ+FINFiVlB
      XLLE/p64hCGlbw+xmIU+TXiJjusQeC9gbMRu4w2UXDy7LElSJuOIhu9wdDzgnfceMZlG9Psj
      2q3GrC9LnGq6nSaD4WTlfAvAUQJBm/G0xfsHyUzUmzsLRlN4TKZf+J7Cdy032p/lOp8m5AlP
      7JeLti3VwxX5gYMGEAghCRnSYhMlFM+IVy4IYBUEbsBrV1+nf+8k20OsJQh8fM+bnUWVkJgE
      gVxizX7DWfAhBHRxyCwvoR1xZp8APiVGnn3Y4n/LIDJlW/qPgY9R5kuOuYQrLpOIR8RxTBS9
      Ce4GrUaHiFPemf4tFnjGv0VTdmmINkJILqubWY0cY+nb0gmKxmV88Dn2/DkXS1JIhcZREiUF
      +wcnvHX7HkmyWJsfWCheBeC5Llcvb7O7s0F/MOboeNky5rmCXmt+HoKwIVrnOQ02OxJ2NjuO
      IwGB1pnpVyBxzCZu8krR33P+TXaDDY70Pe5F3yOQTZ5xX878JmaumF8QwBq4tXeL26PvF999
      z8P3PIzpcnR8zDv79/Edn0jPleDnr19CNRJOo2M2/C2kkFgMqY0ZcMTYnpISkxFABSq6pFKZ
      H0BKQS5qCzVhszdB6DZRAuPI4tpncM0NEvmINE0ZTt7Db11hQ/wSkZVEZAt+J3yTF/1P03S6
      xQOlEFxVL9MwHUb2lP6ozfj0ZeoCha3NkNEaw1u37xLH9eKTkAJrYUGtEALPddjstTg5HeC4
      qkI4i9UsppMpd+8fY62l1Wpw5epuMUWFblKuF2maeOEXiq+yESPQ2QaFRls988oLfjj+OhOd
      ZYVdEMAaeG3v4/zxvT8g0ssH8DUaTa5e8nmwf4JKJHoW5TiNMmI4CY/oR2f0/A3GcoTvBIw5
      LfrQYkza+FppDQXTqWU6nZXxti6NwCnEJlFQgGYa/AV+/AaBvIFhwJ2zr9Bz30CqFp6XIWVq
      JmBnntQS2BpHmECwKS+zyWU6rstdETAtKZ85OEoiBYxG05XID3Dn3mP2djeX7gdwHMVHXryG
      tZbHhwOazQClJKMpBF4D352FP2y2ePfuIb7nAhZhDcpxcKQk1QY0bLdP2OwOwMK7j59B67l/
      o889wnTI1PZxabCnniegM3tbRc5pLwhgDXT8LtvBDo/GmRkzyzHNTrJPdYoVhmcu99jZahFF
      KVGS4pU8s9qmnISZh3ervbkgGhgitPve/GHWcni6T5wH5TFhW76PJ27M0KjkRZUTQv/bNMMm
      TW+by50XeOf4/8JJDOmMGx1Pv8Nu47O0xO8wafwBVmQOqfvxW3gioKV6+WNnO7UALBvNhNev
      n/DdezskumoFynbyIPCRUhS5EFUYDEYEMma76yIEPDyFpLCoitmTloW9efj3/NqVy9vs7vSK
      38vP1FYWfUlhyjPEvr6DSJ8A0JZbXHVeLn5T1kMbgxTqggDWgUDwQu9lBnGfUTLMEmhSjc4r
      RM/s+r7n4HvZVG72ejhKLVRwBhYOzc6y0CrnjrG48MZGHKS/h6KDwGPv9HM46trCPRM7YifY
      ouHsYNFMw7KSmSGvtD2wqtiMYzvlVO+j7CZh0sNaQdMb46lp0UYub9zZGGfEopSa2e+XT6+B
      jEi6Dch9eBtNOB7NzZhCCtDznGOlJHGc8ORIIyWEkSZOUrZ3NjFCcDrMRDhHSlpBuThAyQPO
      ojiFLecPLM51S/U4TffBXnCAtSCEYKO5yVRPEVLi0KIlbiHwYJYPYG0eg5IQyEug7qHlEd4s
      MT0nhKx6hIvEI9RZpGTZ+zuNJllbq8jidSxg0PQRtkk8ukmd20YmGpxBJvLMoOF0+fSVf4yv
      dhhEgiD+PJH3NxiZKZ+P4vc4GF7imdYOUgoGYY+2D4E7wWJJzVyxd1Qm96ca4gLhLZ//zC2u
      dG2ht+eGAgsY4ZKoJv0EOk7CVgu6AaQGBiGM40yBzW6Z5WJrzclgrkt5juLKXpc4tUUwYGw0
      DesUoRflSNmqtCXsnBObhfigeXyu5SIc+ly40X2e651neTi5TyC22VO/trb92CZMycQeKSXe
      TOxRtsVW8hl8uwn+XRCZDK2txlrDe2c/4RnvVU5OXkOru0T+l7EYAtWjyacRaX3c4ijUGFrc
      aP0zAv+YwPG5ufEynso8trE2mOQGMmox9f8EUOg04Oz0Cr5J2etluc2jqEeUNnD8h0gV8+Iz
      IWnaQtkdRqHhJ48Xvd2bLZ+ru/XoE6aS40hgLEy1Q4BGCBhOU7767bu4rovvuwTNJoHv4joK
      32kSxilJmiFrO3C4daVBnFqmseGwHzOJDOMwYaOdmTejpM1wanGlpuW7+G6KF2TiauK4pGKL
      QXTGUA+5m75FQ23Rda/icoWekIgLAjgfpumEx5NsUq1NMYQY5sggUEiahSxqRL2tWxgPn72s
      XboD7hMslsPkAdZYPnfpt5gmgm+OJXCTzd6v4Ts3cWWTaehz0E8LJq9kZr3JrSxC7NBr7rLd
      lvhK46ll0UTqLfz4k6j0OQYjDTbhZKjxHUmvpQBBor0CIQI/QiuPJBK0A4XnCOJ0LmYkKSiR
      RWZqKwpnFYAu7cyxkcQm+/7wcECSGpI0whjLczcu4zjlwz2yGQWK/nxX4ruScaiZxoYkTZHC
      xfc8QDGabOM6WTyS60xoNM9mXbSAFv3hgOPJAcf8JZeDj/FC+1mavIijPnJBAE8D28EuDdUk
      cH1G6SlH6vfQzK1CUjg03S1ylS7WoxU95cgjwLhYCyN9xiA9IRAtEhvS8AJevGTxHMN2+yUe
      jboMp4I4hWbgEMYZYjs10WfBzHqSGEmABmuZpiMOx4+YpJqudwuPW7PWmgzhLf1JSrcJiEyh
      NEaRScYWa+fnFfSaksOBnhXolfS6AeMkYTNIUdYSpfNjXRdEk/ydgceHc/u/sQicoSYAACAA
      SURBVIbxNFpwrHmug+8qktRkJlcLeajTlS2PJ6Nv8eb+n/D59n+B7z2fzaocY1Wm4BuZYpM9
      yvKQ5AFC7GfzNotjkgKksNgLHeB82Gxs4VqPg/4hmpTtLRdhVJH2CBojBvNqBaLePLigopkO
      YbjNY/tdwBLaEe/F3+Mj/i/iO5bAtUgBntRo6xAmWTh2HeLn4FbybhIT8Ufv/k9EeoJSilub
      v4unPrrQRjXvE7d/yn1GqHgTgUM3+UWUaOJKS0NpnJl1xXcdAg+2ukExjpOpy4afUhiRat61
      GE+qaTSbWKEY9EdoYzkdTBYI4OreBp4r8b1ZAksCTT/TE97Z/2u+++BfIZA0va3iHu2/h2je
      n81rgJ3+0szMOZsXsY3j3AWg4WTWJCEyItDiIhr0XBBCIIUkNvPdynEU6KxkuSNlSRQR+I5X
      249nHTAwTSyBK3DtLlf49ZldXuBoh9S4tANwlUUb8JQlTsxSGmQdzJymGAuxltw+/DraZIFp
      jcBnrN+jx6uAoBk4TJMJ7sb3Ec6I1MJQHwKCtvNpFILEQMe1NB2NtSCdgL3N7N0SPeHR4Nu8
      c/hlbm1/hFf3Ps7lzssF4i9zAEhSg+t79DwX3/eYTMKZ02vexhpLdj54dvGb9/5vpJwSJiMe
      nr1Dpk5Zngze5NnNz2fPSn20sSAMkpSUMZ5oZWcsAAoHYVuAJUwnpF4moj7Rf4uRpxcE8DSg
      S+fzpmmKcJyiJCLkJkyL1gandFqhg48mIaCLnbzETwaZNeXFywqQNLhcfgoT+ZCm2IHZDtZ0
      NL4jllIHq6Dk3HQpRVbzfqf5LDd6r3Ecvc/d0XfQTLEkONIj9Q7xdr+OdEaz8Zdt61Nc0ctC
      Omp0CYD3jv+Yu6d/CcDbRz/gnaM3eePKF/jFG78NMLPcGCg0o4wAABCCoOHjB95S2HeYpASl
      /IfQvEWSZmPc6c03lsfjL9P1X8aVGxA+hytuI9xMvOqrL/Oa+0UaIvN26/R1hv2PAzBNB9wJ
      /hUAkYnwReOCAJ4GtlqbDMwJxljuP3hAqiHRipvXLtFuBRyeDHj/8T5RFPPc9Utsb2xwxfso
      l9XrICJcfO6nDmGSybThjAuUQTkTIMnCn/NrEl7aTfnhY4fxcm7KArhO1m+SGNo9y9XOiwBs
      BJfZCp7nLNxGiSyYLWAPq24ytT/CiLKX2xJzTMAlPGmQZGmDA/sYqzYQOgtHSE2l2jaWd46+
      x42Nj3C1+zzHI80kXrS9h9FiBvyqqhHVsOy6dmURRyAI2EKSFQbIjMtqzllEjJHZeCUWi0YY
      hSs9UpNeEMDTQKSj2e6f1Q+SwpKmmof7JzhOdoph4LmMJ9Ms1zUOSYVFKBcHle3Os91OW7h/
      rLm5p3BKP0gZgbAYGyFLy2ItROcklKUa9vuGMM7a77bnTiiAjrtLmHqkM2uMwKGpP0UsnmDE
      w4XEFwF03ZSOmxJyxoG+zam9i1Ytzo4uMU1OORj9eGkMk2TIOH669M9VUEV1JZrEZlT4GHLQ
      IiLUj2h5WygJzzq/ULrX4pLnEUDq3CVs/RUwM1jgsuFts+tfw1pzQQDngbWWSZoFTjWCgNbV
      q4zHE17obeD7c7ZsjOU7P3obpSSO8NlwrpOlGma/O2oeW6NzPxcW5QxwvRPyzJREjFG2WThr
      jsYSbSX1quUcJkXqrmAS2wUCcKRlO0jYn1QD8DKPdtlrrQS03JQpJ7yb/hlmli9wNn7E7YO/
      XjuGhtvB2HLYwxxWlS1cB664zFnyGG3skrj0qP8tNvxXZ9+Wgipq85wlDpu8hpO2iUWA5/Yv
      COA8sNYS6kmWMzvDZtfzlj2PAl64cTXzClvDWfo+TbWBtQ5CWK52BcPQcjoVRfv5vZmiaS1o
      YsZmgGe7gKQfZabBVGuc9jsIFZWTpDBpg7B/k/KAHp4JOoGlVKmEvJqCXdgrdfGOOfT1D/nJ
      9B7WHRfID9BpNXn5+evEScqdB/U5Et95+Gf88Mk3aDq/TMt7duG3qiKvpGSjvVhQoFpJYrXW
      A3Fs2T8ZI4B2MOWZnXmI8yO7z1ifIhD0zRme6+KYLZrmVZrpK3hKo5MBd9O/viCA8yDRCY/2
      H9NsNWm3W5mzyxrG0wmOUlnlNzGLYZeAFWgS3o++w0H8Di+0X2fL3wMFrtvDS7JFP5uIWe2b
      NoGviXWTTKI1TOMWkBFEMsNBRwmC3h2EWqzTk0YbhP3FMiixFhwO4UpvjnSOsmwFMcehxxy1
      NNY4xMO9+b1An4SG3wE6C/22lEBPJ7TkRg12WvoTAMPltmZ8cjSLkJ2NQTooZ45uyndLtX9m
      z040w+lc2YlnXuG8RZmEms7zxbXUaBBJ0S6xU0KycBOrEnzh4ulN2slrRNqC+xijjoiS8IIA
      zoNRPJwdU5Tvlpn5c8PdJQkjYhGT2BjPcWn4iwnjWE2fR2yJTQA22lPGcVZWZK7UOkzi7VmS
      xyJIAUpmJlHp9kEuIj/Gx0QZ8ubJ8XnczCiC0wlsNrOmAmg4hrarCbUkNRIrDDpuMn7yj5ae
      PV66Aq6rQAj2/NyWLhZZWQ4afvD975DEc8X30tXLbO/tFN99Vy0puKYS7ZkzDSlnx0EZgRIu
      jmxypfcGjgwQAnyvxXCS4MlMzNJyCOpwoW8hbPa7sCTefbQ8RKYf0mNS/21CPzzDWMPJ2YC7
      D44I3Ab/9OP/Mb0gy2NNTcJUjzk1TxiJUjU2CzAXm1aBENRWdpAiq/kjpWUaGaytLFXaw559
      EaUlrmNo+JmyPRgnGAvDSDCKoeVZZoGqCAGbQfb7QV+z//7rdC5/h1i8g2OvIwlYJ3iUMwSs
      BbMgUM3DnFnby3KP69wcUvi0nBfYaXyB7U6HprdFnMgFX4O1HkniopxZtQzVALEx+zthYI5p
      OCk3mhMMKe+LIQaB6zgXBHAejOPMDq21QRvDle5Vev5GoaS60sOVHqP0GKuLaB3k+JMQPYtx
      Uqa9Pq6qL6hrbYEGhcJsrEDNviiZ/bNWkmVpzZTJ+ApYBymhFcwcSlbQbrpMoxStLcYKBqFl
      t52NK0cZKeDwLCIa9zCHVxipLyFsG9dep21+m6dGX0sp9bOqdlaVpMWvm03DR69otIG/uVPv
      b9gJfpm9xm+iRBMhJC2/iRSCdmNRdKqONlAOTXUpG6O0NEQbVwQMeMC74d+S2ihTk8VFKMS5
      0J+eobVhHGYuf2sN2moOh/vstvZITUpqUvrJGVMTggAvfgMZvQgI4sTj3lETT6UEXrjUfy4H
      bzZCLrcnWCu4c9pFSJURhhAEviRKNTLPDkPQdlwGGCylynAClBC0Gy5aG/rjhMcDwV7bLkgq
      D08SHp0mgCAcXAIXrBgR8w5afAplL32gOaqt8lzFysou78gsfCMzKy+WPIFMvPLUXGQSoqS5
      GFAqT9CpG1GJOISg7WQbVmj6xDakzKcuCOAcOBgdkKSGhpftwEfTh3zpR/+CfnhGw22S6ARt
      UjY3ely+tAOWhWjRfDFi7RJNlqfb2qz25eXdyayKseWlnTNSI7h32qYfOigh2OhM2JKvFksr
      PIlonXA23lnqE+B0OOXobMLLVzxgbq6NEsM7j8JSZGfZHKWJxI9p2sWAshyyQDi1ZGDU2tQY
      HZehbG2KU8s4yrjGVktwNJr/VofT1sLByZBkZhV45bphu2s5nmxy7+T73D35BgLDbu8yV/ea
      CJHwfOsTCCHoyztkNi+N73iESYTC45r70gUBnAeDaR9fBbS9LsfTA4zV9MMzAKbJPPS51Zyb
      9BLnHdzkFYSZi0owTyrPIdUGbWZy9JKZ0DKNNHEs8VxJtxEXHAAg0S5Kjjie3mfD/yhSeAu7
      8CRMsRaOh5o4nnD/0RlCCpTXYBzP7SqOHy7Wy3Xvsxv4nI4SPEcyibJYftfNQj+CwFuqBTqe
      xksZcFWoHoN0MLCE9+ffl+uLGlTwqNwDZ8cOk1GWERbtCVq+oOXvs9veYBC5nE5PiewjDsKs
      zOOt4FeQUjAWJ1iRCWm+6xMmMcIqrjkXZVHWgrWWW5sf42rzZdpelzcPvsX7gzvc77+70C7w
      fdrt5vyCSJk0/l+c9CZKX8JNXwQkYayJ4jpEWXbbJKnl8UmM41i89gGpGOLRwFoYh20OB7tE
      +oSj8A95PP5zQPBs93douc8ihVOIBodDzYOjmMP9WRUEZ8qVq3tZttszP8Bp/pSTn8yf6yrB
      q8+2OR0mdFsOP7w7YhpnuZDGWibTCEdJPHduxqzT86tV5arQa0qe33PmrWZ/DCaGw6EBYXC3
      vp5VyybLxzbjqzB6A5DE6bz/wA34jVd+HU1CZCfcT34MCFKrSOMA0s9xlP45jhsS+AGuUnh4
      IC48wWvBWENMCI5BIHnj0i/ysb3P8r99/78nTCcF2gZuB2FndX5Ku1yq7pKq+1kqom6RprdW
      PGmJAWCRJKnmbBTRvXabIzlh1z6HTHc5HOxirKLp7vHa7n/J3zz6bzA24Z3T/4XLrV9Bhp9h
      PEnyjjJnUbuBNzv2KE0SWq0GyvZqZXchYKubiU2v3GhzZz9kHGriNDNTxkaTJDrL5nKdepml
      eq3y3XcFveai6fd49ISv/fRLnE1OuXqpywtiLrrFSYL2voez8xAQHJltpPlVpJBoEhBZjrYo
      WYc0kBoHG10hjC3h5ISdjS18z8MRCsEFAayF0/CY74z/BIXDJxu/hS+aIAT/9CP/nMPJY358
      +B0QcLX9n6NH2WIZa2eRj6XYFTLRR6+JBrALRsQs6+uFaz1+fOcEoxUWw0E0JT27Ro5NWb1b
      ydXOF3gw+HMAnoz/ApU+xuO3MreaNWht2Nrs0e02M+ddnlcQfpQ0aQJvF881WjCepjQCpyjG
      +5FrTYyxnI1TxuHMH0KW8nk8zJJryjVCjTYIqXA9txhrHCVs9VoEfuZF77SdIjYph6++90e8
      f/ojIIu/QlxdmifhZfb94/gEYX8dR3hoq0i1JFGPSEWMibeIwwYnQMvPlO0rjc9yEv8ET3eY
      HO1wMkrp6wtH2Fp4r387SxIn4Uzvc0k+j0DQCzbpBZvc2spiUUYx/Pgwq1YmZtUilsAa1h5O
      UaNFuo7khWsbaJUtk7HZM8oghGDDf4l9+W0Sk3k/tXqXKPgXOOlr6Mk1rPUYTUJGkxApBe1m
      QKfTxHMd0ukuoyfXaG1N8PkodvwKX3vziE+8uMle6UgjKQVbHZetzrwqQ5JaDgdZXL9b8vLG
      OsYLAqB8GAU0ApduJxMVpSMYJYtZPNrMOcJgNObBo7kOMA1TDk7njkCBxLxgQIIwPjZtYUzC
      xP0xba/F8dkV7vQ1L1+Dhmdp2Fs05EskiaU/DBkNxjwajC8IYBVYa3lvMN8ZR+aUSzxf0w7C
      dL28C+eFsomVvzcDB2s+RaK/AWYxdiZNLVpYOsEmH7v2KSbJMcZqjk4DTsM7mOArmPHvULYC
      GWMZjKYIKdja6GBTl7O7LzPd93n2hZuFSPT4eMruhr8sIpVAzvIQVpQHWoKnyOspvZtZ8Lwl
      qWE0WfSlzOOLsk/X7NJKXkF473Dl2h3SK/cYRAqBYtv+Iq5VDNNTDIJGIyBOL8KhV8IoHnAU
      7Rffd5zrC79nkeUx+/GYJyWxZBWsO1o0+73+uhACYXq4g98kTjObee48y6IkBZ4/YbfbhVkS
      iJnsMBgbXtje48Fgh2euT7iym2Ax/Ogdh4dPFH1riMKIKIoBga2IIwenIYdn0blEUP/aq9rP
      X3I8TTkdhigJn7ie7fy/8dLn+Ia8xSg0BL7Lnt8p7tnsGna9PDgv47G3Dxo4UmGsIDFmVlFi
      CyPeIOjdp9l9TCgPwUoc8UlSPeJHJ/8jXfd1Nvz/gPH0ojDWShilA1qNBoSGOE3Ii7plgbaG
      gd3nEW8Rmx20XSSOmWP0qWzjOZzXVkpBMKtzr7UlTCA1FiVgOOoxnDyP54V0OydMQxcjTklN
      j5ev9+i1t2kEjxBqyPGJII4NcZwwHIJOM6SSavGoJWPhe++e8pmPbLPZqU/zzDLhan5Ygf/l
      tlGiGU0THAltN3t2Z/s67x/sso/BdRUt2Zl7uhRslKK5ozjh3QcjgsAjCHyMtYwm8Sx32kH2
      b9HbuIpqPMRMr3M7gklkccWzSKFwlWJvq3tBAKtgt3GFDWebxEloeE1i3WKM4kS+xZn4aanl
      4mpLKfCkwhhLUtJ6HSVxVO74WjaFfhBiUUrQUjCN4HSYZJYQ00WIHvcf9hhPIhDP0x+5XL/s
      4rsKm24i1ZDf+KWU3/9jB2OdjIvMCKAOk62F7797yhc+tlubkG/0KsV+sS8pRXZohjbFu+ty
      0FuuNYlSSLRdkIBqxmY5PskScHZ2NvB8r3CSpbMo0qbfgzQrUz+NQiahz0bjP+FKp8k0BMyF
      FWglKKFwlYfruHT0TRzbRSNIbLS4Kk+JufPddcUNH4QCShCneQlxQxhGDEfTGS6/ykkIT7yQ
      q9sBP/jhPp/8hMV1Bd22IdIBUilClR/TqrHGICqlzePUkKSmlgCUgss9uaQDJKnk4aVHWAvT
      /ibtdoDnbHNwPEB5HjIvcEvGaZ4M5ifd5PVIzxMZF7iVWSYVay2TMEYlKY6SxElaELlw+3i9
      v6Ip3QsCWAcNmVksQnlEV6cI3HPumMMHxeefEf8LiJOUwXC6dP0Htx/xtbM+Z4Mp49DnY6/6
      HD4ZEXQDGq1mEaOfJinHh8copdjY3lw44WYS6oXvkKGboywvXFpGoVCHPOQtrDWMjvfw1A7R
      yV4tUhsLbx+qgsDGiZxdXz8jeWEwW4iay+0HoylgOT3pkyYpzz1/lVbDQ9s+sT3BV50LAlgF
      Qgj2Gle5P32PlHFtit2s5Qe4uho+iIXkgzxvOI44G2SE8eaPQn7wZha+caNy0pG1luODrKTj
      5vYmnjcn9jfv1hf72uu5fPJWa/VYBLR3DojPtpfarII8CtZaS5ykM0QXhe9iXkvU4DjZQSSu
      I/Fch9FogrE281IridHZweJGG3SqSZOU8TSlr+9jBi4bO70LAlgHr258nK8+/FMm6Zgz+yVA
      oImyVMJ8lc0Y28oOyZNInmu9MjsUo8zGBfdPf8rjwQMQgl++/h8SqNZCJGPDVQtHUjjCstk4
      XYi4r0LTgUBmgWjGGKJNw9/eDomTsgYuaLZyJM0Om3A9FykEJ0enpEl9mPbTwAfdFMrge05x
      EDalSM9mw8dxszMBHu+fZUqto9jeyih2PAlJkpQ01VlqKtBuNvB9hzhOMMby/DNbNAOP23cP
      wWTlFOMkYTQKMQhU+ArXdj5OW3gXBLAOrLVYk1V21lR2wWLtNcg8I13huuHiEagzEGpAwiFY
      aHqalltFnqqDy9Dyx2tjajo+7JTOrU5Sy1//IGQ6LfUtBH5j7pAKmk02t3pYYzg+PiOOzqm3
      sg6emmtZ6lTaXMwRlLLLZifiYLMAPGMMjqOKpKFW4DAV2azkRyhNoywYTwgx845nbT1XoY3M
      +tGGVmfK5s6YcLyLkgprL8yga8FVHq9vf5Jv7P/Fv9V+jV0fOflvBOcgZZrOzvQSAsdRJLHA
      D+b2RcHy0adVUBL+0Ssd3BVnFFfB7b6H03qAwMXyTzD4xLEgSWZJRY6i1woQlMUngR+4GGNx
      lOC5vWyMo9DlcJAymQjiJCsYPBhNs5TPZoDrKgLfLQrtCgFXr+6hjeXK9fvsXXmC7T+DTRu8
      8+CiKsRaEELQsB32D4/Z7GUsuCwb/6zw75QAzoE4TmZZZoLJZIrnebzw0qKHe63jiwxJm56s
      JZTUxDyZ3KZMiUImCJmJWgP+VwCUfQMn/QJgieOE/UkIFhxX0ZpF1uYEYS2cRU8QzhmRsFjf
      QBwArQWest2WtBvzSNjNbgM1O4j78GyMTrr0jwKIPFyV4AQnFwRwHhwMDjg8PuXw+JRup82N
      Zy7P4vo1aB/f7RVtJRJhXYStIZLSgQ1K/t1M+63nLnF5r8dwOObBg31Ojg559tbuB+4nF2jq
      INRD3u7/xZoWGbiOQ2tWrfn0bMhgkCnnvu/SnOVWKCkLB+Rx9D7N9g8BaLRBi2fg9GMLfd7Y
      criy5fLeSVai3XEcolgTJwlGG6LxNeKJmFWriDHdi4Oyz4VBOCj+TpKEKI5xlMNwPGbH/SSb
      4hcW2sfjhI637B1SZn6afH54xdOAZX4U03kx9qtAKUmn3STScOfhGT95+136/ce89gsRz748
      5uT+pZKILjBpg8UjhsqFqbKG41BneQBCI50JrvTwZICS4KuA2Cynf0opizdQUiPMCKyD68ji
      iCnfFyh3lmiUOBSnG1UK7vp+QjsQ83Erj6l2OJ7MiuLKzLdxcjYgjlOUUrPRG1TzLmDxpr91
      QQDrwFrL4Sg7P1cAQeAzDbPoR4lPV72+jJQrq7jN252mT2h5HTwaOJXjUkXxXxb5edyP+NJf
      DnnpWZ/Pv9FhHUgp+egrz5HoxShLJbPa/Y8PTnCDEbuXNkjNI259bIqUcPnlPwNAp5Jo6jB4
      +EXM7MRFay1JkiwdiPdn380qYChvQOfZP2Tbv8wnt7/AtufxhWd+k28e/8mSlWir18vmSwAc
      IvgDZHyTzdbngax0jBsc0Nj4DgB/+81bhNOMmwY7+wt97XYFv/Kp1qwsPXzvsc8olYz60PDA
      cyXD4ZjRaIoQAqPNrHZTiLf5ddBbiNMXLwhgHfSnZ7z5JDsn2DI/mMJaS1d9BEc0l+5ZyfhL
      P8RMcVHELJ8m02YLl6AgrNRYBmPDNHq60oK+76J0/bJevT6iufttbrwiONyPkTIb1v3bPfbv
      tRgPXJJI0Wpn9ULzXfPK9WdWPs/OOMVx9ISD8CHXWjfpuptcb97i/uQnldZiSb8QdjEGybM9
      NtPXsy86nlt6BnvotIXrZKmZodthiMAag6typ1g2yVFiSE2Wl6EcReC52bv474Ezmmn6I5S6
      iAZdC1/76VcJ0zkrL2Ww0lTXqS19IM5H1DozaQ4jTlC4eDQxpIXocdLX9dUXqlBTmz8Hz/UQ
      0hCOHfT0ecYHOzjeCQ/f0Qz7c39A/7S/UDB3c2cLP6gX29zGfGd25ZybXWnc4P3Juyt9BZ70
      s3lwBNkZCdmcSFx8u5khsz0qyjeOT28w7UtajQDPczgCDg8sg1FEFMYkyQnPXtvD8+Yn6Rgh
      cRwn8324DrZxG+Ees8HrCClxexfnA6yFw/Ei281R65r/O7TdSwh1ACJFOSOEnGJFwkSdIMwz
      tM0LZGFedRXfVhNADkVdzhn+nA40cWLxvZ9NDwCIhjt897uXON53aTbbPHdzD9e9ijVvAT+b
      Q0w15xXY3h58l0F6QtNpcRg9xmKLQ+9cx1nYLhpOK7PFO2c8OXzEeJgZE27s+QwTZ3baTolj
      WIojZnPfnTG5WCNRUhIlKcZmZlwhBEpKHEcV3KEjX8KREbvik1lBsvbtCwJYB79081f5+p2v
      Mk0XY2xU88f4rXvAYl0aYw2RHTJUP0WLmKl8wmb6MXy7GApwHgGU3TP5/hnGlqN+wtWd5cK8
      c1idWJON1eH0oEWapAz6I27/+F0++vpLLAWSVe5rNgKCRg0HEODrz6DGr5I0/zUTPeLu5Hbx
      8/HZmHfvHoCFmzcusbOxUTMmCJOQ0TSz/BjrExs58wC7eN5c7LQGBoMJSZwgpaDRDGZJ+QIc
      hzgxaJMSeA6eK9noZiLqNIwxxrDlfDw7c0ykgCWNrl0QwDq4ufMC/9UX/mv+uz//bzHWMByH
      hFHCI3ufjdZHKvHzhoPJYxxHEniGocoqRxw6f82W/vhCv8cji002Z9/mucCWzCN6bTNGydm1
      EjZ+6SsDfu3TG7zy7HL8DUBqRSGTV8Fay/HRaVbDZyZKJXHCeDQ5N3Kh0fAL2/zSM92fEnpf
      Q1iDMBIh5fwcX20KGX40HvN4/6C478QZIhBsNJ8jSeZm47JrIT+VRwjwZmEPsUgwM6/vZJyd
      x2ABayxGa4KGTxJLjNYYmwWS5Pr7YzcjlqafcQdLcEEA60AIwRvXPsE/fuWf8C+//y+J+llp
      EZ1Knr86V2DDdMI0naCtRphK8ogwjOU9yvvq2/t36fIKK0pAsdE4pdeMZ9/mEMWW6RQkquY+
      SOKE/+/3/7QovbKoLohZWIGDtYbe/9/em8ZKdp73nb/3fc9ap5a7377dfXvhLpKiNlK7tViW
      bE+keDzxGAlsA846GCB2Bkk+xIOZSYD54PEggIMZO5jImCVODIwNjx3HdhTZsuNIsGVRu8Tm
      0mSzyd5v36X2s5/zzoez3Kq6dZstibRJqf5Es29XnTp1qu77nPdZ/s//WVmh2fKIgoC11SVW
      ltu1ds945LNza7d62ZG4Q5OSWl8FUlLzAkE4wg/C+juzbIfV5TYNR/HAuXXWlpbZ6+5z8/Ye
      MB3HNPVbsfUhn2NK8rA2AIHjlFmpXJMaxecbjsZFA375YeM4rr+voBxWIoTArNQwshylFK5j
      FTGBXoxJvSu87/z7+K1v/BZ5mZSO04hetFf/srTWZGV1N0pjVGRwQr4LTQpITN1kn28Wx2Ye
      llq/Y7A6xQyd8Ucc6w7ukz70i4+cpzxRmqYIIVhZW8EwJNvbW4W0Sf3emm987Zmp0ybWk8S2
      QIsRWgRATi5v1/Y7SXPWuWY4HJFnObalcCzJ2kqL/njMmusckTI0A4VIUrJckueKPC84TZMQ
      VTm4/By6vLMrpYoayYTo1izl2jRNGl7hXpW/LYRM68LkwgDuArZR9sWW361pQH84pN0q8vKT
      00+01ujEI1cGXf0CnjhJQkqke+T+vSj/A6yeOsE4nDf3SLPsxXhOMvHI4S9USVhfOp6KoSkW
      eNUZVT1W/SBlkRWRUmJZJru3dxn2umyd3Jw6idF+ie1HBuWdVSObe6TmK8xpqiCKWoZpGGxv
      nSjkFKXNe07+JDqXLFkJhjz8viI1IhPXubl7gv1ui53+oXpGp9OkU17TS1duAeCPx3T3eyil
      eOiR+xFS4vshB/u9QqCg3ImCICTPNZZl4rh2cZNKM4SKUMuf5fkvP0Cem/mHXAAAIABJREFU
      LbRB7wqWYWEIg4zD1KAfBEwqYnquW+8Ikdjnqv4jlFSEFJkkny6ee5Zlbw0ohk3XkxMncGp1
      hKkm7mITP5qGpNO8069Mk2ZpWeqf82yu8RyP7fNnQAjCMOTSlWs88/Rhvl5KzQd+7DZep/qs
      gk3zYxhiMu4o/W4ynrn5aXYHe2RZjhDQdA2W2k3uO7ddN9F4+jyu3EBIQduMsCY+3wEhmhj0
      0RqBUfYpF8W4wgDjKCGOYoQUdcx0+KrDXaBihmqtaTUKUl1/WA4adwbkok8QLKZE3hWWG8ts
      tja50isGMhtKMvaLJhnXLbbXLM8xpKoYvdiGjaEMBAKFgbuyjFwxkcEu4XgLISRIv24NBGgY
      ipYlMHDrX+pGy+HDby38X9MQ2EYxxf3bgS6me2DZdnH+OadpraQTi7+AZ2xjycPh1ErkOCqn
      Y4156moPQU6cZliGwjQNLNOc6iCzstNEadE6GcQ2Ao2tNFvNGIQuvz+OGO7BTp80S1HKLEW2
      YGllCa/lAYIsy4sKtRB4zYIYF0URAlhZXUJKiWMZnFxrkmY5Iz8GKVBmxn3veJG9yw8uDOBu
      IITg/Or52gD8MKHhmARBQJYL8rxQaui0PJpOEykULbUECJQwkEj8UNLI34xtelwHMA6wVj+D
      VRbOzhtvYd3YRonm1HtbLrzrTZMZmEqX4ttklGq4fvUGQgiGw/mdXnEosZxqMU6RlLFkxpYX
      YstCJl4KcCyFbSoMpWi3PExL4YchjbJ4FuYReaymhue5RsaJ5uEeGsYZ4yA6PADNpcvXiMKY
      jc01Gl7xHRimgVOS5aoagy5dHa01URQVXCAlUUqhDEmaabJMowyJ1oWIlu2kkG0sDOBu8ROP
      /wQXb1/k5vBmKb9RiFZduX6bg36MZRq8+cFTWOsWy84qlpxQRctzvnntCwTBk7zv3E+S6zVI
      lxF5A4yCbHcrf54VNlC4x11CiYopJEiyjFE44ZaFd94ZLMvCsh3yqiF9jqRDEknMI2Q+Uf5f
      s90MUOIwyK573kTROJTEKaZpEPgRa+4GCLCUIJU5SXa4K6TE7HG5NmQ9+5YaXNdFKYVhKKQo
      hpTn5cJGa3SeU7Y21NmiyhDaLQ/LKmgTxe5SnViR7v0QQsDGyRsLA7hbrDXX+LmP/hz/7FP/
      jIPggHEQ44dFqtKxJJqcF166we7eLidXTvLEve+sX5vGKbd6t9Fa86dX/m/uW/4pDHGCSR8k
      1CMuxk/yJut9KPHKvxaB4MrtjM9eOEzHZlmG7bYm7t6HkFJh2TPEuzkpznBs0Ltts3Ki6hQT
      NS9JAzd8pzaAftglSKanicVJQgOHPNOcNO9DCoU2IiLjKv7+dv2ZU0YM8x4C8Acd+oMMf1wN
      ryjeb3VtBSHgzNYySZzw2T/9Ol6zwantk0XPcDl827JMlpZb6FwTVqNrRbFzZXnOrf0RUsBq
      20UIiBNNlmuaawsqxLeE08un+cUf/UX+/m/+LIOoR/WL8hqFkGzlwgZhiK09IjGmz22UbfL2
      e95Kd9TlevcqT+39ElvLj7IhpysBgb/Ns/0OD6z604HwMZjl5WvAbTSOlxQpF/v2mS3WN45r
      VNc89MBFHLeofmstyEZ2fYvOtCTKIoJkj73RpZLHAwM/LeKZYcztbsDZlXPIk2ZR9RZgGT4v
      Bv+cNC8WbcvzGEcdtIZrLzxGEg9BDkhjhzwt/H3LNinEPwVSSdaWTRoNg3ajUKmOwsNrrtie
      FZqOyVLbZTAK6Y8jlBSstB2kFAzGCWmmEfnqwgC+VbTcFm8//TifevrTWKZBw7JI8+JuaZmC
      JMnZGxxwM7mMtHIEAle0OLfR4eTKFkEypjvucrP7FKlY5eRmodUvwweR4WNEwItdh/tWAmal
      eAouzKHrkc6EAZMuQF1hLtO3ylA4rl0eV6QOj8N+1+WUW9E/NAf+S2TZYYFP65xL/d8kzkY0
      XBfQ9MfjOn+fpAnP3HieDfckH7nvIyDgheE368UPRcCbZRl5rlm950v1lEzPXMIxPASCvWtP
      kMYeaV5MqPybP3q6rJDnxKnmtz9L/X3kZS2g6dm0Gg6GEmXhS7K9ojjR1rh2wEtdRRhl5BrS
      3sIAvi286+wTPLdzka7fwxYNro2uI0TRZtjxDHKd8cKNF7n/7Flc0a4bWkxl8sR9T/Dk80/S
      83vsHuyTpCnn19+LEbyDaj8YJwY7Y4uTremG9d4459NfHaF1cd9Ns+k7vRCCpZWjfBsA0zIx
      JhScw3BeM7xmZTlgc6M79dhXrv4mvfEQKSS5zgmTiJW2xYn1ZVZWltG5JslvcGOnP6Xn88Ur
      X+SJ04+T6oRhNDhsXBeCMIrY6xbv4zUaiHIWgDIyLKuwbKUEWqnSlA8ryJdvQZoJNpeLoR1a
      mmhZjAJ3LHOCtg6WabDe0my2E4ZBzDeeGxROlhBFfHGH3/MCx+Dd97yTt5x+M7/wH/8Fl25d
      YziKiqyDhI5XpD6H/oidgz3OdjrsJ7vkeUZGRj8sWiv7QR+tNb1Bn8vRZe5demcxdLtEmh2t
      FGe5ZnyXfQGTkEpiqPn0iUmcO9vjzJk+hjHRz4vgR9/xV1AY5a6TEiQBX375SUb+PsvLS8Rp
      wtqyR7vpsrM3KApSYYQm4le/+ivkRHUVXQjB8lIT59jrmfzcGnSRvVFS1jvfs1cFTUfzwbdJ
      hICXd+FiqaQ+HIcMxyGObeKUXWa3Rgaj1CaMUjRF0kFrXVBDvsXvcoESruXSdjs03X38crq5
      YxtYpsHWiTUMQ9Ed9ugNv0KrVU1+14RRRJZluK5duyG96FmeO/i/uG/5p7DUnbu+XglxkqBz
      jWkaZdN6ccfVxQUA1DtSDSFoejGnTg0wjBkDE4cyI4KC1twLAvb923UOv1qyrmNy79licPf1
      GzuluFWEH6bYZrFYTUNhGgVZLS6DJoGApMOK+gFErIhEYRxRaJCmKa2Gi6Ekn3umzSiICIKI
      xkQ833Yi9naL79JrNVCqkF4cl7+XE6semTaY3DClENj2QhrxO8L7730X/+4b/wGvUfnW0Gq3
      UUrSPegTRhFCCBoNFykLslaWpkTl317DYWV5uVxgGSP5u3SyT6D0fCN4pbC4IrLVJDDDQBkK
      yzJLGfT5EALe/EgP255fW9Dlf1DsABdufoMkSzBNo9hZNLiOS5wkDIfjOvzIc80wKNopHUth
      mYqlTmOKQwUQRiEy1Sh3E5GLeoxIGPSIk4TINckNhZZDpJGitaQ70vzhlyBJiw9Qcf773UIw
      17ItvLJ2MAoSiqE9mjNbBQs3yzV9P14YwHeCc2tnsJSFsA+5Wn4Qo0ROGBVFHa01o9EYyzZr
      TZ6ofC5NC+m/iuoLQ0bq92jG/wW8Yj3gzijuvgkm+hWlXM6cCVhbu5NA1qHpXdx5hpv9wt8Q
      HObeLctkMBzRHwzrY6OkCHIFsLLcxDTkkbTrIcS09wOMRgFBmBBGMVIplu75fdwcBt2PEUaC
      wqaLF0kl0fkh/TrwQ0zLRAhBEKX18PHV0gD3ez5hsDCA7wjrrTV+5oN/m1/+3K8Qp0U30s3b
      PcSqW9KIodNpoQxJlmVkWYbvT/cB7+7tsbG+XlN2czlgZP8ea/IjwAzv/xW2AEMVEoKT6UDD
      MLBtkzC7RqaDiUVWDNtY34jZ2AoZp1bt6kRRNHWOVcekYbbQGm70biJqOrYq/HJdDOJuNT28
      hstoHBxebFmpUrKsJ5QJqoKVUbhogrJJSE83UB5eQnnRuQLSIvWq5WTJoDzsTgzbQlej+rlK
      IoswDLU9UyBZ4FvDzd4t/qff/Xle6r7IUsvEtQ0MJTHNYlCcZVpkWVbw1efk6DvtNp32tFqt
      JWwe8z5AxzjU7dkbjfi9C1855io0nr3JyeW3H3km1zEvB/87mR7PeV2BjY11DFVw5K/fuDHF
      cO3IH6Cp3n3kNbujCzx169fI9VGm6KSUyvqyw4m16YYaKSSfePAnsNTh2vujJ0Mu3zh0w+67
      9xStiUac6zd2ee65l+p/C0AZRt0v0O606x1Glpkg0zRqcd2mVxAWHQPefr7YdRc7wKuA9dYa
      SpiMghSzzGc3HBOTQnY8TaYXSNGvqrDKqqVtHb0BxTria+M/4c2N72PFPFE8qEYYS18+9jqU
      vB84agBxvnfHxf/t4sbgC3MX/ySkgOX2t3eDPSo5M38L1FoThBFp2mVldfmOwgGGzLln49Al
      XBjAq4BhOOLi7UsA9EcxpuEASXG3sae/YsdxsMohERXyKr8383tLdcLXx/+Zx7zvY8XYuosr
      Oc5H+g6lGI9ZT680xAIoiWmv3MivNbiux+pyxQ7V5BSDueM4qc/VajeLpp9cF7tqlNRda1EW
      4zUckjQr6NIT1xdHCS/vdWk1LM6unag5RAsDeBWw1Ojw6NZDfPHK18g1HPQjPNfAmQg+DcOg
      2WwipZxyL6DIrKRZhmEczY3nZHxj/DkeabwHyfxZXRVmJUi0zgnyy/SSz38Hn+5O7/fKNQmt
      IUmKiY9KHeX8T2J1bY1m2fATRAm9YcBwFNA9KHL3XrPByVObRFGhF+SPfQ7i3tQ53IZDpwx+
      0zRjMByX16FJ04xREHN5LydMBSeXFg0xrwqEEPzcD/93/L1f+0fsjfZJc01/nOA4Jl6jVDZz
      HJRSRxZ/hewYA4DCCJ7y/4wz1ptQwiCbcDsM0WLV+EFivcPkBJtUj7gd/Xv87IXv+PNpnZPl
      yUSMWfxwz4mH2NB7gODW3pje8JDOXCx0TZxkfP1i0V9smUVB66Hzy1im4o8u/Q73rDxE02pz
      snWuLk4BmCpjuZkwJKNbNbrked0QL6Wc2kVN00AqxZUrN1lebrO83GY4GjPoD1FKcm57k1Pr
      Dc5utYhzwY39mP3Roif4VcOJzgb/4w//Q/7xb/1TkqxYoDv7PlmWc//5jYlU53ykWcadPGVN
      zsvx07iuzcif9LsVrrofVz8wdXymx/jZpW/z00zj2uCPGPmfmXNNKYaRc2arw+Zqg6WWTaPh
      0h9G7Oz1ieK8HlgHECdFu2MQplimYhj3+fqtL7DhbXGydZbnXrhGb1gs9rNbgg+8TXHlVsaL
      LxWf98bVSwSBz/l772F1fYU0SbBtiyRJ6mEZSZIWyhcU8wPG4wDDULSaLlI4XNkN0BSzyLRe
      uECvGoQQPHH+bfzsR36af/fMbwF1gx4CVW/9FW/96AkgimPCKGY4HJeV2+J/1c+6+B9pluA6
      VqF5qeP6vNOnO06j9O4+yySyPJkisk0dW3L8HdvAsQ2UEoSWRCmBYQgcDLQuu73KOKc3jBn5
      KRurLqYhCbIxL/oXiNIz5Hmxi2ktyx1H1yp1uS58/+pERcN7wX5dWe3gltpF1TglIcB1bAxD
      4jk+SarpDhM04NhF19rCAF5FCCH4r97yo1iu5rNXDsVhpdR1dfZOPnCaZQRBxEFvcOwxFbSG
      hmuRixCtI4SYLZxJTNkiyYdzX38nrCyvsLu3+8oHzkGWZbVEClQGX/QjVBiWE9+FgJPrHrGO
      uBVdoTdoE4yKRRysKEIMDoYjnvnmSwCcOX+OtY0Nshxu396rC3FKSYSQtZZppTbdTXNsx8Yy
      NWc2rxNEkss3V0ALTq6M2VpN5uj2LfAdQUrJJx78a7z9xKFsep7nJEny7d6Q58IPIvwgRuuc
      KL9x5HlLrvKmlX/AmvM4lprPEJ2Hwr9+5azNJGaVo+8W/VGMFiZeoyj4JUla/4nThIyULE/I
      85w8L6jlSimyLCPwQ7I8o+G5uK5DEITcurnLrZu7JGHIWsfl3PYqtm0ihMF+/zR+dIq2Z+O5
      Nrbl4JgLNuhrAiEEHzr7UV7sXqQbHRQ8/iwjJsY0zTsL3H4La88ve2gTszeXOCGFyXbrE2gy
      doM/58boM3eXubnDc7OXnuU5B73xBM2hmO44CaWOUiDWV1q86d6tot2xnAl231tukaXFPdnS
      LS48s8revsmp7W0AVjdWaTa9QvuzfO80LTj/ljAQtlFKoRTLuuU5OK5NHCd89akeb3pwGxgj
      JYzCFr3x0sIAXiuc7Jzm3s7DfO7KH9MbBmRpTqftstRuloKt39pd9jj4QYRsHj+GVAiBwGDD
      fS9hukemQ8L0NmG2d/xJZ/L74ihNZwpJmjORkKHTdDh7aqm2pBeu7NTtoxWanl0vVIXFpvUA
      B1uXyEuR3puX4ct/2sQwDdqlpmiz2cBtOFiGKkWxCgpGw7UxVDEeCcr07NRnEDx78SonNpcZ
      DsY0mo16HOvCAF5DxCFcvXnYXOKHMd2+z5mTKyil6A2CMjg8DHTT9C4FqCbQC5/BM8/e0aiE
      kJxt/5cA9KOLXB99mjD7Fvz8O1iA17CwzSItub62hmUaOLZda/pcubk/ZQAPnDzH5loTyDGF
      ywPOB2nJTfzkFqEu4p9mO6OzDDq1MUxVkOqkRMnCRcvzHMs08FyrYPXoQlEuN65xoP8Ek2W0
      0OS8Bakczt1/jpduFefuGIpxlKN1tjCA1xLby6frLqoKaZaRpilpmjIc+Yz8aOo1liFqOsXd
      4sbwP7PWeBzHuLt5Xx37AfrRM3dtACdXN3E3WxOuUcHzee76CwXJL81IJZhC4FgWtj2d8q26
      uT74yON4tsu5zdMkecQ4Djij3osSJhpYaawSaYte1GVlM+ZjP3gKJ7+Xl28N2O9HGEpyYrVN
      nmtu90aoPDvsdQCkHCDNA9L4gJQDyDxM0wVlkOVFDcZQqi5G7g0WAzJeU3z4gQ9xsnOSKwdX
      2BnucOAf8MLBRaDot2159hEDuNNg7OOhuTX6HGeXPo7AAjRKpROszVlknF7t0AjO0/MPGIbT
      WafZGOD06gnOrp+bPkZrbvevESUReZ4ThjkhCTu7+5w5PU3bsE2Tlit54OQ5bLPkPymHJecE
      qmyAF4DObXR+mCxQIkeJozuikEVaNMtzbKvQ/QmilBObN3CcgOjgYfZ7LsQnMYQFCtpNpxYh
      azdMslwzCqKFAbyWEELwwOb9PLj5QMFLERAlEb/+1L/mq7e+NJdL8+1GBjHPsbZ2AttYJc8M
      HGdEt/sYes7ESsMI6bTabHQeRWtN199nJ756KP14Fxyf6vPN4qA3YDjyObVxgvOnzgDw0SfW
      EAgsNS3Cq0nJVDWERBB1HydKDEQ2oGnHnFkNQe/gJ1usL3t886kX+dQXv8Z73u3w1jd5hJFJ
      v+fi2BZ7vZD+UGEqj7ZaYW+8VVK07fr9LCkRQoP0MWUxl3hhAK8htNY8ff0Zdoe7xGnM83sv
      8COP/lV+4rG/zVs2H+fPL32JC9nTvNwtFOeKLi5ZNnXfeRFO1hRsw+bDD38I27SBQ+7LSHyF
      TIPEwuYMOSFjvolK24yHkpPtIhhf8dbQKifTKRrNrehoWnXuNcwx1zzPieK4GHBdjYMtNTr7
      +S6msAFBrH0CMWRDniuvtzgjSETeRuQRkqJoZSiJoQQ6zxiNfJJE4ToJYSi5fL2LoSRSKS5f
      XUfpDpapGfdvcnOnyyMP31N2rpWFNRHRt38dO/wgq51zCwN4LSGE4NHTjxDEAYY0+Jj6aL1o
      33bqcd526nGG4ZC/9Wt/F1TGifUWaVIVku5+L1j2lrCMWaqFZsTXSWsX4s+oexWBcSrY0G/B
      LNUYVp2N8lXQHR7UZyk4N9/6vrS+dDQzlRCS6Ak5Fg2pjgs3BcDcQQobS68hpMEocsl0zsj4
      UzQpa9srPG49hu2GXLiwSxAJbMsgSTKuXbmGRrN7rRjFOhiFBHHG8y9cwbJtlpeaNJsNhNAk
      2UOgV3HNxQ7wFwLXOr69sWk3+d/+2i9ybfAyv3Px1xnJIWmaHsml3wlC3m3QPBXGcmN8ha3G
      9lRTCgC5xJAmq501tJnhOPOvf54LtNzqcP7UGZbbnZlnju5oKTG7+TWW8geQmOSNL0Haxsw+
      QpZb3OivoIkJm8+DyPGWm7jmFnu7B3z5i1ew7JT3f8AlzzVPf7OQR9+N41JJQmG5DUajAA9B
      r+8TRBlSChznYWIpCMxgYQB/2bh46yIN2+Px7XdxduUcv/rVT/J8cBFDyZn2QM1BP+Kw6Fr8
      YCqT9z9wPwC3xzdp28sYUtWjg46DqUwyGdPP9llXW1QiuArJg2uPst05zyjrc218ee7rDWHx
      gYc+hNY5k7uVMHK0XaU8XyGW0KCDtzHINtBA3rhQ8qaKIR7kRYZHaA90is7NuufXcWxsxyok
      5rVGyiLLIwtNdNCQJQkJGtHykDJnfTlBa9hcskBLBuGCDfoXCq01NwbXONXZrh+7f/N+Dvwu
      Qgg2mif4e4//A37hs/+Ubngw9do0zRn6I2ZZB7YpWW2tkeucq4OXyPJLhZSgEBiWecSRqtoe
      G7ZD221RkK0zFAYShcJAGWAZNuNRkR1Kspgg9gufv8ztGzqn05i9yxdnqyZcZqTkZMT4x9Sf
      JTJvU0UTavBD2Faf5bVnkNrGzU6R5YIXez+GRrDTG3H7oIfnWnz8499HECbs9goVjM7yEkEQ
      IlVRjwjGY6IgROtyVrCd8c5HwyIw1h4GilG0cIH+QiGEmFr8AFe71zi7eqb+d9vt8ImHfoxf
      /donp46rOJCzyPKMGwc7eJ5VsCVLMal8TgyhhGRraePI4yFDNDltpp+rXKOXdy/zbPj01HNn
      Vs7zphOPHXGDTGERlf0KCgOpFeO8S0oyp+vt0HUrRLdyZCoIIouGoYAcP8zoD3KElFRt7a4t
      MaSuq89lb32pzlcM6rMsC53nCCHIsoxyShIHoy5CNfFMSa6thQH8ZSPJEqIkKjM4Be5fexBD
      GKSz/bZzLCDNMj5z4XM8dM/mK9Mrjnk6Yn6/8KqzyU5wg9Gc528Pd3hwM0cJhURiK4dt5yya
      nGfG35i66KzcEdrZm2jk5+pnci0Y6lJGXmv2+zG5NmH3DG89M0Q6Qz7/jV2+9HQf27a478F7
      8FyTR840AY2pDCyzzc2dA8IwQimF12wUw7GbG6A13e6AJE5ZbhUG8qXLX+e5m79Nx93i3ed+
      dmEAf9m4b+PeI48tuSucaJ3k2uAKhjQwpUXTMHloc4O23cK1XJbcDiuNZfaim+zoS3fFLSoo
      A6/gl0+cRgrJicYpbuxfO3L3DhOf670rNK0WP7z9V5EUA+t2opvHnlpio5ieNywmfxJQDQ+s
      sqJVJFNdd6V2V0m7m8ZEMnb2K6jG9VAUGJO06L9O84Qsz3EsY2EAr0dIIfk77/gZeuMuntXE
      M5t1Tn1SVU1KydP73+QzVw/oz/TGplmG35t+TGu4vVOMKp2H99+7gWNOZ3xcs4FjuIzH44LE
      x6ES8zevfYWG4fEjZ//reoFO6psWEDTlclGI0itTz0hACU1WLvqma9Y1uKduXqUffglr6W28
      +/GHUIais9QuZ4JppND0RzHDMKc3DGi3m/UssTRNieMiEJdS4ro2e8NlPn9BMYjHrC3ZWMon
      zcOFAbweIYRgrbmOp5qFmlyuSfP0yDhQpRQPLT/CQ8uPcGV4mW/sfYWLvacJMp88y44dgXQc
      Eh1hzLSIKCVomi322Sur2dNqC9Ud+nAHmmWSCmw8EGDM3v1nWKZiQh1ub7zPiwfP8ujWo5zd
      3CgU9ZIqEsqRomicH4wzojgr+q2znFRnWJZV8JOyDCnzWoVDCImpXLSUtO01cj1eGMDrFVJK
      TNMkiqK6UXyyCbwK7vIy0NtunuNM6zxJ/gku9p7hqztf5JujbxCmwXFv8aqhUrXrRV2uja+Q
      ZkmZiZwwBg1Z4iP14fRJy3AOiWxC03QyUANA0xhtsNF4D7dvNOjfusLGWofVlRbPXrzB83mM
      ZSoyYTIOU8blxHgA27boLLWJ45h+b4hlWzSbHklSjG5aMn6Aljfk7MrjCBYtka9rmKaJ4zgE
      QTWtRdcU49l/x3Fc0COk4N7WQzzQeYQfucfnqdtf58nrf8bLvZem1CTm4ZWiiNoPF4dujhSS
      3d1d8jznwvBr/MmtT6OkIghjxhNDOJI058bt36nfxVSKj775xznVeQeG1DSMFOEkKPsmGs1B
      /15c+SDP7VxhmI7wGg4nNjrs94YEQfFZWy0PrTW+X3w/hQhwTpYWu0Cr7RFHSUGfzgpFiZZz
      BpVJskzw8s3ewgBez6gW93EBrhCiNpLxeFy3Do4DH8u08Jwm79n+Pt575gPsjG7xlRtP8qUb
      f86uf7s+x2CUEMZZOWXlzteT5xpLmfzD9/4PmGVMoqTCKyXdP7D2/bSbbX7nhd8gyRKS7LCR
      Pk5zwuTQIHIkT93690TZiPvX3o5lJiByZF5M19RaIYSk026QZRkNt6BLPHB2lSRJGQcJfnw0
      qNcaDg662LZNFMVYbkhjqY8RbfPmbUnHE1wd2mjgoL+oBL/u4TjOEU3RyUDYNE1M06TT6RDH
      MZZl4dgOURTVatRCCFadNX7o/k/wQ/d/gsvdSzx5/fN8/qUvcjDYrQd2343Sm0Cw4q5iSvOI
      xpEQgie23st+sMsfXvr0nc8jIMkDnt75fWzjNudX76VhNTHy06AVUphYJrzl4W2EgBevHvDU
      xVvYpuQdDxaT7eO8kDb5+jMGN24PcF2HMIwYjXzCMOL0uZSzjz6LlDmbKmbTeDPd5AYjeYVl
      +f1srTcX4rhvBMRxzGg0Oiz1l9Ba02q1jmgOZVlWG0CSJFOKFJWglJSSMAm5cOtZhmGh6X9+
      8xSWcfSeuD/cxw/HWKaFoUwe2XiMLC3Urid3qcogpZQ8ffsCn3zylwnKGCROcq7tHCpjNxzF
      5uphUGwoA8dweXjt3Ty49k6evd0k14KlpoEQ8OyLu4z8GEMJ3vfYBkoK4qwYizQOMnZ6BXM0
      ihN63QHLHY9OR6HWP4WWPmmS0WSD29HLaDSb1vu5clktDOCNAK01vV5v7h3add16Wv0ssiyj
      3+/PjR0qI1B3MToJIAxDnHLwdSEzWMQTVRAuhKh/NgwDpRQv7l/il/78Fxkn4ykDkFJw7tQS
      kpSsfM3kZ3t08924nXWkktiGAgH9YUgW2XjR/Tx61kMIuDFySHKZW8P7AAAXB0lEQVTJOEjp
      jTNyrYniUpPVKvhQsvE8uvn5WlMJbbBmnUe7u/R2WwsDeCOgCnLH4/ERIxBCsLw8XxE5SRKG
      w+ERA5g99+RrK+Oojq2ei6LojooWs1NfKiN4bvdZ/tWTv0zXH3Btx6fTcrnv7CpewyJNMw56
      A+IoPlKZkFKyubrC+e3T9bkdWjxqfqg+5sJugzBVJGnOKEgAzXAclUTAom3TNlPOn3+K/fQK
      pmhx3vowpnS5of6QIBssYoA3AoQQ2LZNEASkaYpSqq4JVHqa8+7k1XFwfAZpdrFPKthN+viT
      hjH58xFFuvI9qvjjwfWH+J8/+r/wb77yb3Ccr7O10apfYxiKtZUlut0+fjjdGqqkJChTwIef
      TZNy2Fx/YyemHxR39larkEupv5fy+PXWgEeaT5DrdzBIM7KsST8QxHILbS8GZb9hUBW+8jzn
      ytVrtJrNQhpEivJxzfLy0tSCFELgeR7j8WGX2Ozz8wxkXvapMqbZO/2dUAmCNcwGP/2On+Yn
      /5+/z/VbVwt5mJZDu+VAnhUyjxLGZX+0oRTvePMjqJk+B01OxmFmyY80lQidkAEN18E0FIaS
      eK6JH/n8yUv/ml78KJqcx059hH1fUbzNW6G1yAK9YSCEoNlsFj49xfyvNAzqu/RoNGZ5eenI
      ayzLIggOj5td8PNcmskdoaY4KEWapkfcoMkYYPJ9J8+VZRmO6fDjb/sR/sUf/wp73cIgN9c8
      HrpnDQQ4toWSknEQsb6yXC/+7mBYSy2aOGTu17Fbhfht+zQ4iUH/5luKHavcmQxD4bkWWC/j
      DBK+cPXPOLm5iqdTHPEhpDyJQKKidy4M4I2AyUrwofaOWYjphhEN16XTKbj5WZZNuUNVoFtl
      bF7Jh69+njUCwzCI47iu+s573XEopN8N3rH95ommzMkfCpimQcdQnDl1sn7s5u19btw+FPG6
      sXKLh+87C4DdkjSSexjvqlIXKC2mcSaaPNf4+Ytsb63Q8gLOb59Ai4j98bNcvuBz9swmnucu
      DOD1Dq01L16+TKfdIUkTwjDEtm1u3tphqdPBtkzGvo+VpgRBQJZlSCFZXl6qszaO40wJbk1x
      eWbqC/PcojsV5OYF1/MC6zzP2VreZKO1xs6wWNDznCghBONuxPaJUwTZuFS2m5lrXELpFs30
      /Sh9QH8UIKWk0bDRRsZef4TmXXjNkNx7juFohKlPcumpDSQa1y66yRYG8AaBVJK9W/uARgiJ
      5zWIk7hIIwJpkiBkocE5GhV5/a0TxWyxqlhW1QSguFtapTtznG9/3K5Q4U5V6slz1U0pdoO/
      9d6/zv/6B/+STM/vEXvixHv4+P0/hqEMcp3xV9Z9+kGfn/9PP88oHtXGBECuSXUfZY5wjKKh
      M/D3Gdq/gUwEDy39Xe5d+kFuJm1206fQgYcUNvee3aLh2qTZwgDeEDh96hRZlnHu3FlMw6gz
      MH4QkMQxhnFIlRZC0Ol0igHWJYQQdUVZCMFwOCROEhzHIUszcl1kWqpKslKKMAjrmEIIQRRF
      U1mlCsftJrPHVWNiP/6Wj9Jx2/zzz/wfwHTmx5AG79/+/qLKnOUIJG27Tcfp8LPv+1k++YVP
      kuuIsKQ6B+EVbsT/Ctrw/Q/8CMvWOtf6PX7/hUExqir9XR42/zq2nbEqVkgcwYmtdVJd6gR5
      NxcG8HrAbIV3EtXinQfbthmNRkRRNJXOtG27JIn5NBqN+jymWQzrdhyHg26vHjxhWzbD0Qgp
      BEEQsrGxzkGvS6vVqsc2ZVmG67p1LDF5fZM0bZhOmU4eW6VwP/jge7h3/Sz/8eIfcDn8KlnJ
      EN1unWPDO1HvVJM1hYdPPMw/+fA/4Tee/1VyJqRVqusoZwU0HAOv4eL7IRvN93MQWcROTB6d
      IOu+G8vISNKcTF3H6nxxUQh7PcD3fVzXvauAchZaa4bDYTF/gEO3pdPpkJR3eYDRaESapvWi
      nzSYyfz+bCq0OqZavJOvqzBZBZ7F5Hmq54tMTTG/dxgP+L3n/z92/R3+zlt/Btdo1NynyfNV
      9PBb/nV++/q/BeDKjV1u3i7EA1addZRUGKZg+YSByG22zb9Bbl8iSIfEB+8EBG0nYncAaa5Z
      OvnlhQG8HpBlWdmw8e0JI2qtGQwG9eKGYsF4nodpmvVuUJ0/CIIj7zVLk5i9o1fZpXk71bxK
      83FFsklUhhBFEYZloISailPm1SIQ8B9u/QZ7yQ5f+NrzfPPiVQA21jxsS9FwLN503zYIsJVH
      p+mgkxWyg49gG5qHNrvsDRVP3bCw3EUh7HWBu+XjHIeqRlDd5augMwiC2m+f3GGyLJsiyVWY
      rfZWMYUQoj7v5LG9fh/bshmNR7RbbYIwxDSNgpukIQj8ogc3zWi3CgmWKpVapWbjOC6MKoek
      nAYzey3V++Z50d31WOed/PHe7+JHcT1joDKaLNPE4xMYymCpeY7rO39KU22yZEoQgjCP0a2r
      3PdASsfYXBjAGxWzBSilFI7j1KzRatGOx2NardbUaxuNBr7vH3E1Zn37SZfFsqwjdYAsy2g0
      XOI4Znd/D9uySNOk7FTTZFlKGEUYyqCvdS2xOBqPWV0pZiSEYVjHFpPXMG83zPOcLMs4693L
      UneFMIoxzermIVBSkGWa8e2303ZXWO606clr3A7+nNAY4tlbfH7/S6x1Opz0tnnH2sMLA3ij
      obrTVezMyYUyG6BCQYibLY4ppWg2mwwGg7o+cJy7kqZpHWRXi78ymna7jR8EtNstPK+BEIUA
      bRWPJKmi024jpKznCGg0XqOBlJI4jqnc73mp2HnUjDRN613g/+U/HTOf7PCzbLnvYj96Gl8/
      R6ov04x/iNN6i7NeyLp3YhEDvFFR3Y0n3YODg4N68U1iaWlpLmU6TVNGo9GRu+8sgiDAdd1j
      awTHNevMO2byDl8F/9X1zxLzZoPx6vmq5+BTF/6YX/iDXyLTOW3PwjAkOgeVb2NIkxOrLs2G
      Yv1kRrPhkAXbbOoP88BJwTvPnFuMSX0jo2qYT9MUwzBI0xTbtmvC3OzimxeUGoZBp9OpffEw
      LNKLk+5VtfCqQH3WJ6+C4tk7+HHvWT0P8ykX1d+T7zd7bJIUnP8feOD7+NRTf8xXrz/FYHzI
      EpXiBQBiYbFBAw6aDIYWb948xaqxxxNnnqivezEm9Q2KiiIthGA8HhPH8RG6Q/UnCIK6Z3je
      eYyJLrBqwcOhIThO0WJZ0acnY4PJ88ye47iYYh7GY39qd5jdVeIkmeJEVcb633/0Z/jYQx88
      9rxpluMHMd3BiCu7V3ni7NkplunCAN7AEELQaDRoNptAsWCP86WjKKqD3nlUZmNOK2R1B87z
      vE6n3g0N+jjaxOy/K6Po9wfYtsVwNKI/GHBrZ4dev0+31yMMI8Iowvd9giDk9u4uURTVbaBt
      p8XfePxH516H1hCnGbvdMf1BQkutsd7cnP7cr/hpFnhdo6rwVlXe2UU6edcNgqDO6MzCNE0a
      jQZBEMzNDM0S417pmirMc3Fm7/RWufiFEKUrFrHUcZBKMvbHKGWUVIqcKIprcl+VFj3RWkNJ
      Sa7LCWsCLEMRJTmrpsND925xqnGGd26996gbePdf9QKvV0gpabVapCUjtNYImqnQFsPswrmt
      jZWrY9s24/G4dnmqRWuaJoPBAMMwMAyjUF++gyFU7z2vSAbUFOs0TWm4Lu5MRmvyuEnDi5oe
      vu/X7l+e59iGzb1r57i099KElmjxRypV9AfYHp7VOPrdfcvf9gKvWxiGQbPZLKRRHKfoGJvw
      16WUpGlKv9+vd4tZVIYwr1JsWdZU1ua4xR1FEaPRaCqemLzzV0F39WfyPSZ3sMnzV/5/lc6d
      vL44jvnHP/DfIoUky3KyLK8nQlYsakMYjJLh0e/sLr7XBd5AEELUha9JisT+wQHjsc/6+ho6
      zxn7PlJKljqdIylSwzBYWVkhyzIGg0FdS6h4RVV/ckW6mw12AZrNJlEUTdUmpJTYtj3FUQrD
      sM74VK+fNILJTJPv+xiGMUUOrAzz/NI2ZzvbXLh+EQDlltRwP+TarQPGvadZNU7B9ATXxQ7w
      3YyqWFXVeYQQjH2fg26PKIrY3z+gO6MgPYlJWsRkrahyq2bv7kIIRqNRnYqtdozqj2majEYj
      HMepz1tlmI6jg0zylzzPOxK/TO4W/+gj/w2feOyjOKaNXVIk+oOASy/v8pWLFzEyZ8q4gEUh
      7LsVWmviOME0jXphjn0fdKHL4wcBzWaTdqtVL77ZRZimKYPBoD4fMOXGVPygyUVZUbCPc68m
      r69CGIZ4njcltDWbzZJScnt3j4brkuucpueRZhk61zVlOwwjOp02l3Zf4gtXvsxvfu13SbIE
      IYrI4Kee+HH+5vt+YipFu3CBvksxGA7pdru0mk3iJCEKIzSa4XBEs1mwRAPfZzgcYpomlmWR
      JglbW1v14phkZs5CKYVSiigqmlpm06UVjgtsZzNNk3fmyXihOq7YUUxGZc0DrRkHAQ3XZXQw
      RkmJZdmEYcjJ5iY/9c4f5+OPfgw/Drg12OH//Py/5XrvJkmaYFuHN/zFDvBdil6vx2A4JEsz
      hqMhrVar9KcLAlocR2ysrxMnCcPhqMjDD0e89S2P1a7NpBjXvB6ACr7v12S5Kp6YDIBnMUub
      jqKIRqMxVaibrWVA4XoFQVCIAfs+DdctdiEpMQ0T3/dptZoEQUCr1ZoqyKVZiqEKpurkDrAw
      gO9SaK0Jowg5EYAWCz+e4vYrpXBcF8o7eJVerM6RZRm+70/NIphFlZY8rlfguMer56pFPY8a
      Md/1ytA6RyrFcDik3WoRxzGe59WEuTzP6+JeFThXMcfk+RYu0HcphBC4M9mSK1evsbpaZHeC
      MESKQjhLlSnSebWBKrWa5zmDSmZx5r0qfn/1PtVrJ9973rnnFcXmUSYmDSPPc3x/TBTHSKkw
      TYObOzt02u36+EqGpQrUW63WsUp2CwP4HoLnNeh2e4RRiKEMTpSjh8IwxLKsI5o/FaSU5HnO
      1WvX2NzYqNObruOQlkrUWmtazWax65T1hqVOpzasScOoXJ3JxV9JIFbDQKrHJjNGhmHU19oq
      F3wcx/X7VK+drGPM20UmsTCANxiOY1jeDdbX1urCkxCizrpUVd/qrnkcvEZhQFmW0fQaDIYj
      kjQpyWWCg26XKIppt4s77v5BF9M0GI3GeI0GfkmzkFKSZoUsS5ZlnDp5ksFgUMz2KpvvK8OZ
      TZtmWUar1aprB0ZZ7KsKc57nza06H+eKLWKA7yFU0iSzga0QhZTKnfqSq52ioi+EYVg3ylfn
      rppVRqNxHXTmOse2iuKXpuDy6zxnZ3ePlaUlsjxjZXkZKCrIhlHwfiZTq5PV4spAJq89CIKa
      olE9Vl2zlJJmqaM6zwAWO8D3ECo/2LKsWiFispCUJEntBs3zw6sMT7XYwjCsG3CqcxfN+I0j
      vrzj2FPvtXViE7tc5GEY1sdW2kSTO111TVXVuDrHJE1iMv06+XeVrj0uI7UwgO8hVG5OtVij
      KKp59dVdtJoDMJkNmneeqiurasSHQ4pEtZNULlVFZ5gk51kTr/c8b+rcVYww+7pi5q/LcDhE
      KQPHsaeGfMxmr4BjOU/1+y1coO9tpGlaD9EAatpDlVJ8JWhdSK5M3sWButm98s1nO8cql+q4
      VsvZSnDVlilEoWwnhCRJE4SQBGGAZZo0XJcojnEdh16/j9fwyEsJRkMZpFmx650/d66+nsUO
      8D0OwzBotVoMBoM6Lqj6je/mxiiEqKkPVVV43jGztOZ56U6Y33cQhuEUvUKVO0uv38e0TEzD
      wLFtRuMxmsKNynNNlmeEYRFXBEGIUpIwjKYIdosdYAGAupeg8umVUnieN7dTbB7yPGcwGNR3
      fKBWfZiXucrznCiKjgS0kz9XccpkFqiKVSoplSzLptQqKlS7ThRFdDqdKfWJqbbOb/cLW+C7
      C1XBqxLSqjI9d4uq4DRJfZ7XgzxpHNVdXQgxRcirMjtVZXqSO1SdtzqmCoKrPxUO+UNW/boq
      Xpg0xoUBLFCjCm6rBfKtKtYppWo/vcrAVME1HG2iqX6+dOkSX/va14jjmC9/+ctkWcZwOKzr
      AkmS0Ctp2wcHB5imycsvv1ynZSvMZnpm6RTzsIgBFphCRWprNBrHVobvhOqOHQRBWRMY1YoU
      VZEqiqKpkatQVG/39vY4deoUFy5cwHGcovp89SqnT5+m3+/T6/XwPI/bt2+T5zkvv/wyy2UN
      oTrXZKZplm4xD4sdYIEpKKXodDq16/CtQoiipbLaCaSUdXtmFV9U7kqVMs3znKWlJXZ2drBt
      myzLsG27dskm5V6qXakaw5okCVE5TXJeZ9rka+Ze7yIIXuC1gNaabrdbSzhGExyhqtLb7XZr
      WkOn0yEIglrdYjAY0Gw264C3Ev46ODhgeXmZg4ODutstjuP6uEnuUVVUa7fbx3ecLQxggVcb
      vh9gGKpWqJ7k4lTZIsuyGAwGLC8v125Ru92uR6vGcVwP/qsoEvNU6CpUnKaKth2GIUtLS4Rh
      yMbGxrEp3UUMsMCrjus3bpBlKZ1Oh/F4XNOyx2XjjJCS4WhMs+TxV80wVc+C67pYlsV4PKZR
      CunOk3usUPn9lT5S5XpVqdx52agKixhggVcNhwGtTZblDIcjxmOfsR8QRjHjcVExdh0HwyjS
      ka1Wq558WblLFYQQhGFYZ4BeKaitnqtnDpSoFPHmvmbhAi3waqHiEVWo/PD9/X0ajcYU/7/q
      ApssvAkh6Ha7dX2gygRV1OckSabYp7N8pYqdOqucXXGILMs6kipduEALvGqoWKaTRuA4Disr
      K4RhOMU3qoJh3/fpdDq1X++67pS/Pnk+27brDJLjOHWLp2EYdQtk9acKgCv3KI7juazQhQEs
      8KqhYoBOcW1m+D9wqCtUPVa5KFmWFRNlyhRn0cyeoQyj7lkWpW9f0bqFEORa47ku4/GYUakx
      Wp27MqZKRn4WCwNY4FXFrI9e3e2rP7ZtF3qg5fjWKvNT+f/9wRCth2Ul2WA0GuI4TtHyGBat
      nMpQ9Rzkqho8HhdT5ddWV+v37vf7NY8ICpmXWWGthQEs8JoiDMNae6jRaBCG4ZSsYrU4K3++
      0XAxDYPhaIRt27RbbVzXISt3jSRJMcs7uRSF8l3lBlXZIikl3W4Xz/PqfmXLsuo6w1TBbBEE
      L/BaoSKq+b5fB7uVdlCapkRxjD1RcZ7l7lTB7Kyig+/7tZJckiSkaUqz2TzS3VZViSutVNM0
      a/HgCosdYIHXDEmS1P3HFUbjMX4QECcJUghGgGlahGHBHZKl3z452K8KaOFQVj1JkjreqBb/
      JJW6kohfXl5mMBjURbXRaESr1aoD60UdYIHXDJPuRhXkClG4KY5l49gOXsOrdXyUUogyZdls
      NuvUZ5UKrbRIHcdhOBzW9IrxeAxMB9zV1Jwqs+T7Pr7vo7WeHgy4cIEWeC0RhiG+7899bnJn
      qILkyhAm05WTPb7Vnd1xHPr9PktLS3VKtWqy8bxC+7QS6oWjUymVUrTb7YULtMBri2oewOT4
      1tl+X6AOYudNh6yeLwZzFws6y7K6mb56zvO8Qje0pF9XMcSsysRkZmrhAi3wmkIIUdOaq38r
      pRiPx3UAWwXLFfV5Uia9eg1QGwgTQTMcDsno9/tlpigphn8sLZXD9vocdLs16W44HJKmKQcH
      3cUOsMD0XODXAkIUGqRBENSjkyZdk5evXkUgWF5eQgrJ/sEBpmmhlCypDQmWZdaMT0Mpojhm
      dWVlqnG+3W7XDfSVO1UQ4TSjUaEn2nAc+sMh4yBgbWUFY95k8QUWeC1QcfMrhWrgUJGawq3J
      yQ+7xfKcuJwOORiEbG6sE4Yho/G4FuydNNrK9TFNE8dx8H2fpU6nYIkaBkb5t1QKx7ZJs4z/
      H4LVR1Gcbc38AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Climatic Disasters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - climate- votes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - disasters- climate-votes' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Happening &amp; Republican Votes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXCU553nP2/faql130erdSDEfRiwDQZswI6xQ5wEc9hx4iROZndnUjs1
      VZPZqdqZmqnZmarNVDJVe8zMpuJNNi6Dg21iJzaHjQOSDQYDRoBOdB+t+2ippb7fY/+QIcaA
      aUktdUt6Pv91Se+3v2/379vPe/2eR9I0TUMgWIRIkiTpom1CIIgmEQmApmmoqjpjHUVRZuxj
      phqR8CE0YkdDVVUqKys5evQowWDwDo2IjQCROJISGkIjkhqapnH69Gmampp44oknMJlMd2gY
      ZuxKIIhBVFXl9OnTdHZ2cvDgQRISEu76f+IcQLDguHnY09rayv79++9Z/CBGAMECQ9M0Kioq
      aGlp4fnnn//S4gcRAMECQtM0Tp06RU9PD88999x9ix9EAAQLBEVReO+99xgZGWH//v1Yrdaw
      thPnAIJ5j6IoHD9+nJGREfbt24dflujoGw3rqpEIgGBeoygK7777Li6Xi3379jHoDvDux43U
      dw7xh0/b7ru9CIBg3qIoCu+88w5jY2Ps378fs9lMe+8om5bnsXN9Ed1D7vtqiHMAwbxElmVO
      nDiB2+3mwIEDmM1mADaU5/JmRR1nqzvZtb74vjoiAIJ5hyzLHD9+HK/Xy/PPP4/B8McytpgM
      vPDE6rC1RAAE8wpZlnnnnXdQFIV9+/ah1+tnpDelcwCPe4SPzl9ECXr59NIlrlyrRTxLLZgr
      QqEQb731Foqi8Mwzz8y4+GGKI0B8YirpKTYkSYeiKOhUFU1VUVUVTdNm/MBTJJ4YVFUVWZaj
      7kNoRFYjFApx9OhRTCYTe/bsQZKkaX3PX/QxpQCMjw7T09NDks2KzmABVUGTdOj1EqqqRiaR
      hukfld0M4Ew0IuFDaERWIxgM8vbbb2Mymdi7d++M6+zzPqSpdISpioKsKOj0etBUJEmPXq+7
      1Q8wU2OyLM84AIqizPjLmqkPoRE5jVAoxJEjR0hKSuLxxx/HYrFEzIckSdKUHOn0eky3inzm
      v/YCwZcRDAZ58803SUlJ4cknn4xIT8EXETfCBDFJKBTijTfeICkpid27d0fk8PpuiAAIYo5A
      IMDhw4dJSUnhqaeeQqebvTIV9wEEMYXf7+fIkSNkZ2eza9cuJEma1fcTARDEDH6/n8OHD2O3
      29mxY8es/vLfRARAEBN4vV4OHz5McXExjz322Kz/8t9EBEAQdTweD4cPH6asrIxt27bNWfGD
      OAkWRBmfz8ehQ4coLS2d8+IHMQIIoojX6+XVV1+lvLycrVu3znnxgwiAIEpMTEzw2muvsWLF
      CrZs2RI1HyIAgjlnfHycI0eOsGbNGjZu3BhVL+IcQDCnjI+P8+tf/5q1a9eycePGqBz2fB4x
      AgjmjNHRUV555RU2b97MAw88EPXihykGwOMe4XJ1I9seeoCamhpsqdk4CnJmy5tgAaBpGpVX
      O7hS10rD5dP84PlnYqb4YRoNMZlpSQT9Y4yNBQlpQ+TnZYFoiBEa90BWVK7f6ID+qzjKVlNY
      Uj5tvdnYlykFYGxkgM7OTpJTUrHETSZYknToREOM0LgHHs8Ylz86yYYHN5OVlkdqohWDYfp1
      Eul9mVJDzL0QDTFC4264XC5effVVdu7cSVxyNvmZSRhnUPyR3pcpN8QIBOEyPDzM4cOH2blz
      J8uXL/+s8GKviUpcBhXMCEVVae4ewe0JoGmgaeDs6eNf/te/89hjO1i+fHm0LX4pIgCCGfHO
      uUa6BsZ4/UwtYx4/Xd09/PU//JTVG7fSNBL75RX7DgUxzbDbx6NrHZQXpnO1rpn/84tf8Y1v
      fIP9T21jZNwfbXv3RZwDCGbEQyvy+eXxKnwTY/idVXz/2wepcgb45fEqHlyeH21790UEQDAj
      lhemkxkPhw59yL5n91JYWEhpabRdhY8IgGBG9PX1cfjwYZ599lkKCwujbWfKiAAIpk13dzdv
      vvnmvC1+EAEQTANN0+jq6uLo0aN885vfnLfFDyIAgmnQ0dHBb3/7W55//nmys7OjbWdGiAAI
      pkRbWxtvv/02L7zwApmZmdG2M2PEfQBB2LS3t9/65V8IxQ/TCMCtZ+ci8PizYP7Q0dHBW2+9
      xbe+9a0FU/wwjRViKs9dAKDf2cr5y9WzYkoQW7S1tXH06FG27Hyady/38PKxKsYmYv8ubzhM
      uSEmKz2ZkH+crkEPekIon60SIxpiFqZGc3MzJ06c4IUXXuD9q70c3LEc17ifj6538OSmkjnz
      MVsaU26IcTqdJCWnUpCXRXunEwkJnV4vGmIWoEZ9fT2nTp3i29/+Nunp6ZQXyhy70II3EGLX
      A8VT1o3Fz0M0xMyCj4Wg0dDQwPHjx3nppZeIj4+/pTHi9mE06LBZzXPiYzY1REOM4K7U1dVx
      4sQJfvjDH5KYmHjbIWVqYlwUnUUeEQDBbdTW1vL+++/zgx/8gMTExGjbmXVEAATA5OHjjRs3
      qKio4KWXXloUxQ8iAAImi7+2tpaKigq+973vER8fH21Lc4YIwCJH0zSuXbvG+fPneemll4iL
      W1jH+PdDBGARo2kaly9f5tKlS7z44ouLrvhBPAu0aLlZ/BcvXuS73/3uojrs+TxiBFiEaJrG
      xYsXqaqq4vvf//6i/OW/iQjAIkPTNC5cuEBtbS3f+973MJundkNroSECsIi4Wfz19fV85zvf
      wWQyRdtS1BEBWAR4/SE8/iBXLl+kq72FF198EaPRGG1bMYEIwAJnYNTDsQvNVFaeRRcYZtfu
      r6PXi6/9JlO6CqSpKgODg2iaRl93Bz0DI4iWmNimvn0I1dVOqtHLo195BrPZhDcQiratmGFK
      AfB53LR2dKFpKlZbKq7+bhGAGMfTd4OLV+uw5K+ne8hDvMVEvEUc/txkSmOh1ZZMUkIckiQx
      2NtFZn4RqOpkU4xoiIkpDU3TOHPmDKMjQ/zrP/0Vkk4HaOh1uinrRntfZlNjyg0xo6Oj9PT2
      4nJ70YwjpKckoJfECjGxpKFpGu+//z4DAwMcOHAgIpc65/Pn8WUaoiFmFnzMtcbYhJ/Kax0s
      d2RQkpvCqVOnGBoa4sCBA2iaNq/2ZS41REPMAuHNynr2bC7j5MVmrlz4EJQgBw4cQK/Xz/hw
      cKEjngVaEGjEmfX0tVxFVWT27t0bkcPRxYAIwALgiY3F/M1Pfk6y1cj+Z78pin8KiEOgeY6q
      qlw6e5qdDxSxZ8+emFmAer4gRoB5RpNzmEOnrnO1qQ9VVXn99dfR6/Wi+KeJGAHmCUOjXn53
      roFrzf387YvbOHWphU/PnSI7I5Xdu3eL4p8mYgSYJ5y52sbXt5Zj0Ov42W8+5uPK98nKSOPp
      p59GpxNf43S56yenqupc+xDcB3tmEq+frsMflOlp+ASDOZ6vPv1UtG3Ne+4IwCcfvse7777D
      +ar6aPgR3AOPP4Q900ZjVSWFBXk8uPmRaFtaENwRAK/HiyzLVJ0/Q1vPcDQ8Ce7C6LiX9uqz
      fG37OkqWr2PvtthegX2+cEcAcvPzMegNbHt8D0W5adHwJPgCiqIw1HSBIZ+OnJLVPLdrFSaj
      uNYfCe64CjTiGsNRZMc1PAhLCqLhSfAFKisrKS9bwg+3bhVXeyLMbSNAKBBg3caHkGWNVSuX
      3fHPqirT09sHmkavs53BEfecGV0sKKrKqcutHDvfSCAkc+bMGYaGhtgqin9WuG0EqL5eRbE9
      i54hF6Oeq+zY+vBt/+z3euju7SMjxcpEwIDi7iYtxcbNryUSSyYtdo2z1zvJSLKSGG/ipz8/
      wtJsM/v27ZuRp/n8ecy2xm0ByElPpOJiPRa9QmLynWu/WhOSSLCa0TQFk8mMrPhQAUlVUT9r
      ipkJkbj8Ot81JCAQDHK5+iIGxcPevc/fesx7Ln0sFo07+gH8Pi+KJmGNs9wx5I6NDNDQ1EZh
      cSnjw30YrCk47Lkg+gEipqEoKj/511cwEOTPfvgd4uMsUfGxGDQkSZJuC8DkCuAd5OcX4HR2
      Y7fbwxIVDTGR0VBVlZMnT+LxeNi7dy+qqs7bfZkPGnc0xAQnhjl+7Bh5BYWUlK+Z0RsJpoam
      aRw7dgxFUW4d84s78rPPbVeBzLZ0tmxcQygYJBAMRsvTokPTNN5++20AnnnmmSi7WVzcMZ6M
      jXspdDhIS7ZFw8+iQ1VVfve732E2m8VTnVHgjjvBcSY9fUPDuIZHouFnUeH3+zly5AgZGRmi
      +KPEHSOAgp6R3lbirCnR8LOg+aTOydXmfratsVOUZePll19m165dlJeXR9vaouWOAGRk51FU
      tgz3RCAafhYsrnEfxz9ppjQvlcPvVWEYvMpz+75OWVlZtK0tau44BBru66Kq6ioDrvFo+Fmw
      mI0Gxr0B1hal0HrlAxwrNonijwHuGAHikzJYsaEci1nMHxlJrBYjLz6+jP/0439g+66nePqx
      TdG2JOAuAZgY7uLI1RrWrN/EuuUl0fC0IHG73Xzwzhsc+h9/Q4Hdjk6c8MYEdwQgITmdYlMa
      CWIAmBGKqhHwB7Gajbjdbl5++WX27dsX9t11wdxwRwA8Hi8N16tRVm9hyZJoWJr/yIrKoQ9q
      sJgMxBs1Wq+cZv/+/RQUiP6KWOO2k+CRnnY6+4bY9pVneXTz+mh5mvd0DYyRZrOwoSSFl19+
      GUP2KlxBsR5XLHLbCNDS0c4DGzZRW1NFVqqNlKSEu26kKkHq6xrQW2wsXVI0J0ZjHU2Dtl4X
      52uddA6Mcel6E9115/jOC9/iT/c/yq+OX2V1SVa0bQq+wG0BcBQ6aGjpwGazMeQau2cANFXB
      7w8gqXq0z/UCLNYFMlRN4/1LbZypaifVZqGnb4ChpvMcPHiATpfM22cbsGfZpuwrVheVWEga
      twUgI9dBRq7j/iJBL3HJ2SjeYVRJh16/OBfIkBWVs9WdtHS78AVCPLbewcmz1VSdPUHJ+h3E
      J6aSIHt4ZJWd9CTrtB51iMVFJRaSxrSmFDNaU0m2yGTlF6FfxFfzjl9ooqt/jMFRD+WF6VRc
      rKPjWgX/+c/+A/m5WcRbjGxeWUBGcrx4zidGmVacJEkit+CPx/6LbaE8VdPw+kO0941Sbk9H
      VlWOf3iNukt/4Gd//5fozPGkpY6xeZUdq7ihGNOIyXGniKpp/LayHllVaXKO0NAxxMSYC6u7
      nl/89G+50DiM2RjgKxuKMJvFlZ9YRwRgikx4g2jAwR0rcQ648Y2PUFNXxdcOfouC3CwKciev
      9IilieYHIgD3QNM0mrtHCIYUlhVmoNNNHsMnxJlQVY2jlXU0NLUS6qtm6xPPUGzPibJjwXQQ
      AbgH1a0DdPaPER9nZNjtoygnmfcvtWCzmvn61qV8eLEG42gDzxx8gWGPwrolIgDzETGx/D1w
      DrpZV5bN+iU59I1McOpyK9/dvZal9nSOVXzKG2+8zp//6E95bMNSzAY94iLP/ESMAPdgx/oi
      3qyoQ1ZVtq8p5NCpas7XOKmqqae/6VN+8vd/zYnLHVxoGGDPFvFc/3xFLJR9Hx+BkMyr71ez
      viyHf/rF77BOtPJv//y3JCTc/S753TQi4UNozM68QOIQ6EsIhhROXGhGVhQqzl9BHmjg2ee+
      TcegN9rWBBFCBOAeVLf284+vfIgkgTwxxKu/OYpj3S4GxoK3rggJ5j/iHOAuBEIy52udFGYn
      c6mqmvPnPmLJxscpyU/HNeEnLz0x2hYFEUIE4C509ru52tSHPjDC+Y/P8hc/+o9UtQxitRix
      WkxidZYFhDgE+gKqpnGuupM961LB1UrZhp0MTwRJtcUx4QvxtS1lWEzid2OhMK1vUlNC1FTX
      YEvLxlGwsG4AvXGmjtamBl6/dJFv7P8WW9cUcelGDykJFvY/tgKzKP4FxbS+zaB/jDF3kBCD
      5OdlwQJpiLnS2Murb71HYLiT/NWPsnZJDuX2VMrtqbf+J1ztWG0AERpf0hATLkZzInFxEpIk
      IUk6dAugIaZ3eJzf/P40nsFOlm3aidlsoqFzmIdXTn8Wh1hsABEat2tMS01nMPHAxj9O7BSB
      ZZvmFK8/xPlaJ6X5Kdgzk3EOjvHf/u11btTX8sDWJ+l3eSlJTiAnTcyQvdBZlAe0b1bW8cgq
      O5VXO3hwmczf/c/X6HO28pWvfpMm5wj/9YUtmE1GinLFBMELnUUZgJCskpdhI9UWx2+PfYBV
      GaF03XYanSOU5KaSn5lIYnxctG0K5oBFFYCRcR/jngBrl2Rz5HQt3S11DPd1Ubh6G6omMebx
      s2dLmWhjXEQsmgDUtQ/yu7MNjPuC6CSJPJOLvIQQf/KXP+Inh8+BBj8+uIW8jKlPXyKYvyz4
      APiDMh9d7+T4hSY0TSM7NYFPzp+j36ry8//+XzhaWc+PD26m3+WhpWeEvAxx4ruYWNB3gjVN
      48jpWi7Wd5OTNvn48ocffoTNKFO8+hF0Oh1xZiP9Lg8DLg8JcaKJfbGxsAPA5ORVpXmpBIIK
      Ddc/Ra962fnE0zy8YnKi2icfLGV4zEtygkW0NS5CFuQhUPegm4+ud1Kal8pSexrHPm7k0icf
      s2djPmklG9izpYxEqxkAg17H9rWO6BoWRI0FOQKcvNjMVzeX0dbromdoHLtpiKU58QybHOh0
      ErY4s5ipTQAssBEgEFJ4s6KWJucI/+/EVfpdHtpqL2Ix6tn91FOoGuzdtkw0tAhusWBGgO4h
      Nz87cp74OBMZyfF0D7k5V/kBX91cxgMPb8cXkG9NZygQ3GRBBEBVNX7xzhVG3D4u1Drp7BvF
      1X4dvd5A2eqHGBj18tXNZex+sJTatoFo2xXEENMPwGczQcQC11v66ewf4xtby2nvG6W78VOy
      0mz8+z/+OR5fkL3bl/FmRR2/P3eDbWsKo21XEENM+xygz9lKa7+HzRtWR9LPlKltG+DQB9WM
      eQL8y+sf091wmRUluYyb7SiqytbPCn5lUWZUfQpik2kFIORz0zUwjqSEUBQVTYteQ8wndU5W
      FmUw4vZSe/ksRnMcqfYVrCrJ4vj5JkpykufEh9CYnxrT6wcwWigqzKetowtJJ6FDH7WGmLKC
      dC7WO6m9/CGW+ERKlq2l3+Vlmy0ORdWm3UARi80bQiNGGmL0BhPp6emkp6cDzPiXf6rIisqR
      07WMuL1YTAb+8N47LC0uJBSfR0ZSPE9smlzge8d6sYCf4MuZV/cBFFVlxO3jUkMPH9d00js0
      jq+7Cr/Oxnf27+H4hUYO7FjB2iXZ4kaXICzmTQAUVeW1D2oYGvNysb6blAQz/Y2fYIhPJa9o
      GQ2dQxzcsZJVxRmi+AVhE/MB0DSNq839nKvupHNgjG1rCml2DnO+4iS2lEwKy1aSkRzPD/es
      x6jXReRESbB4iPkA9Ls8vHLyGnq9xLDbR2ffKDWf/IEVy8uJSytkwhfk4M6VmAz6OT8XEcx/
      Yj4Ap6+0YbUYudE1hF6CQ4cOkZVfjKN0OY7sZJ56eAlZKfHRtimYp8R0ABRFJSHORM/QOLIs
      4+64jCk5lz957mnGPAEO7FgRbYuCeU7MBqC6dYBDp67T0DmEpqp0XKsgq3ApOTkOdm0o5tcn
      r0XbomABEHMBuN7Sz2sfVNPc7SIoK2iqQse1ClLzy0hIL2C5I4Nfn7wmrvELIkLMBeCDy61I
      koTFZMAfCNBV/SGp+WWk5RRiMujZsqqAx9aJ4hdEhpgIgKZpnK91MjzmodE5jNVsZNQ9QVft
      WVLzl5KUkY+iaDjyk9lUnhdtu4IFREwE4FJDD03OYS7UOukdnkBVZDquV5K/ZA3WlGxyUuPZ
      tqaQ3Q8tIV7M3CCIIFEPgKpqdPSPUVHVzuhEAEUO0XHtDFkla4lPyeaph5aQYDXx7PZl4g6v
      IOJMMwAawUAQdHpMxulJ9A6Pc/xCE41dwzQ5R1BUDUUO0nH1DFml64hPziQrNZ4Xn1zDr09e
      FcUvmBWm1RGmKgrd3V3UVNcx3Z6wP3zaxu4Hl9DS7fqs+EN0XD19q/jjzAY8/hC/PF7FpuX5
      03wXgeDLmV4/gF5PnMkAGRmgqihTXCFmzBOgpXuEDz5tJaSot4o/e8kGrEnp6CQJk0HPX+x7
      kGX29MmlSsOcr3MmK8TcJFabN4RGjDTEyAEPN5o7ybM7kHQ69NLUVog5V9NCZmoCVU19yEE/
      ndUfklP2AHGJ6STEmchItrKsMIPVJdlT8jWTFWK+iNBYHBrTUjOYE9j+6LZbr8N9BM0XCNHS
      7aKiqp2WHtdk8V+vJPuz4l+Sl8qox09WSgJ7ty+bjjWBYErM2VWgQEjh735ZQaNzGE2DUMBH
      5/UK8pY9hCUhhU3L8sjPsGG1mPj6I0sxGsRavILZZ04C0NA5xK+OV3GjaxgA+bPiz1++GXN8
      EgAPr8hn2+qCiAxxAkG4zHq1aZrG62dqaemZnJEtdJfijzMbCIZEI4tg7pn1AHx4rYPrzf2E
      FJWQ30Pn9UryV2zBHJ9EZnI8RTnJFGYnf/Zwm2hoEcwtsxYAVdOoaR3gf791iZCiEvRN0FXz
      EQUrt2KyTq7C8tXNZTzzyNJb24iliQRzTcQDcPPBtlOXW7nW3Ieiap8r/kcwxdmQJEiwmBA3
      dwXRJuIBaO4e4f8eq2JozAtAwDtOV81HFK7ejtESj14nsao4i1XFmTyxsSTSby8QTImIBkBW
      VM5UtX+u+N04a89RuOZRjGYrADpJ4htby1m7ZGo3uQSC2SCi06O/9VE9x843AZPF31VzFvvq
      7beKH8CRk8yS/NRIvq1AMG0iFoB+l4ffn20EIOAZw1lz+y8/QEFmIi89tY5LDT2ReluBYEZE
      LADvfNyI2xvA7xnDWfcx9i8Uf7zFSHqSlQv13ZSKEUAQI0TsHKCxcwife5jexksUrnkUgykO
      mCz8lUWZvPDEaowGHVaLkUSrJVJvKxDMiOkFQNPocbZjsKaSmTZ5N3ey+C9jX/0oBpMFnSRR
      lJvM9jWF7H5wCSajeLZHEHtMb4GMwDiekBGlv4f01EQkwNXbQuGax9AbTaQlxpGXYWNJfhpf
      2VSC0aC7bTklSZJu6x24+Vr7bNmle/09nNc3de7XmzBVjal6urkv093+8xrT2XamGnP9eURC
      I9zXn9eYVgA0TcFoNKOTfaiApKqs3vQoF+p7cGQn81cHHyIl4bPmdVUhGFRvNSJIkoRONxkI
      TdNue60oCnq9/p5/v7kzer3+jtc3d+ymDnBrR3U63X1fS5J023af1/kyz/d6rWkasiyH5fle
      nlRVJRQK3fG/4Wz7+f24+YDhvfb3pv977a+iKJhMprD3/24eNU279RmE+53c6/MIx/O9Xsuy
      fFt7raRNY0ZZTVNpaWxAb03BUZADmkYwJNPeN0ZhdjIW0/SOrGRZntHToDe/rJk+UTpTH0Jj
      fmhIkiRNS02SdJQuXX7rtQYY9DqW2tNnZE4gmGsWxDrBAsF0EQEQLGpEAASLGhEAwaJGBECw
      qInYoxBfvMEgNITGfNCIqREgEvN/Cg2hMRWNiI0AOp3u1t27mepMF03TYsKH0Jg/GtO6EywQ
      LASmfSf4rmgK9bW1mBPTKbbnTmm72upqLEkZJJlVugdGKVu+gjhDeEmXgz6qa5pYvW4V7U0N
      yLo4spItdPQMUrykHFuc8b4aqhKi5ko1ZRvX09NUT1A1kp+TRktbJ3mOUtKTwliGVQ1x40YT
      qiGOtHg9fcPjlJYU0trSSkpmHnlZafeVUEI+GhtbMcYnoZfHCcgGCvIyaGrvZdmyMsxhzJbn
      nxiltaObhJR0FI8Lv2YiLz2BNmcfjtJykqz3X2Bk0kcbRqsNg+LBJ+uw52fR3NJOjr2YzBTb
      /T8PoLejCcWajjw2gE81kJ+RSGtnD4Wl5STHm8PSGB3sY9ATwqR48QbBXpBDS2sbWXlFZKUl
      3nf71sY6gpqJ/JxUWtq6yHOU4OrtQDMlABE8B5DdvVgyS5EDniltp6kq/mAAVVFwuf2sKMun
      t3s4fAHJQILZhBz0oJmTMOlC9A67Wbm0iIHBwTA1JBItFmTA7/MjKwrdfYOsWr2KkYHesH0U
      FRUihwKMefyUF6RQ19RKXvFyPO6RsCR0BjOOwnyCwQB+X+CWj3J7Gj3D4X2ulgQbRkkj6POg
      GOKwmVTa+1ysWr6Uwb7w9kVvtGC1GAiGQvj9AWRZobdvgGUrVzE61B+WRsjnZnTCT8A7QUgy
      kWTWaOkZYdWqFQz2dYeloSpB+l0TKP4J/P7J76V/YICyZSsZGwnPh98fQFEUuvuGWLV6FUOd
      DegSMpCUIBDBAOiMFvwe962n9cJFk6CsfDXB8VFCcoiJiQn05vB+HQAMRiM6HUh6PUG/j2Ag
      hKQqTHg8SLrwBjidzoDhsxEn31FCsinEhF9m3ONBJcw+BjXIjeZOlpUvJRQKMeHxY7WY8Xon
      kOXwrlzIAQ+tziGWlZWQV1hMmkVm3BdixKOE3U8R8AexlxTjdrsJBgL4A0EMqEx4JtDC/DyU
      YJCsAge+iTFy7UVkWhXGfDITngkULbwT0VGXi4DfR9/AMKHgpA+jpOLxjKNJ9x+VAbxjI/gC
      Abp7B8jKLyI7QcPlkZnweFDU8HzkO0pIMoXw+Ce30/QWAj4vodBkACJ4DqDR5+zEnJRBis16
      /3+/uZWm0t3ZjsmWRnKcHme/i6LCgrDnDPK4R2jv6iUpNROrXiakjyPNZqbD2Y+jqBB9GEIh
      /wSNLR3E2ZJJskhMBHUU5KbT1tpBgaMIUxiHY2rIR0NTG6Y4GwVZyXQPunHYc3C2t5OWU0C8
      5f5fetDrpqndSUJiKjaThjsAhXmZOLu6yLcXhnUVJOT30NrRRXa+A803ik8zk5kcR3tnL44i
      B3rd/TVUOUhraxvJGbnoZQ+jfhVHXhbtbe3k2h2YwwyjKgfxhVRC3jF8ipHM1HjaO7pxFBWF
      5eMm4+PjKAEPLq+CIz+b9vZ2cgocWMLwMdzfw4SsoyBn8vu0FxUxNtSLZrSRmZYkiZNgwaJF
      kiQppu4DCARzjQiAYFEjAjCLBPw+FFXD5/NOcd5rFY/Hd/c/aRqu4SF8galdbKj4SVgAAAG8
      SURBVBDcHbEaxSxy5ewfKH7wK5w//R6bN66n1+XHnmmjq3eYwuJi+jrb0MUlk5NsorXHRUFW
      Er0Dw2Tm5VJ7rZFiexquiRClRfncaG6nvHw5zrpPGFBtDHRdYOOmtYwOjuAoddDR2kFiRi5W
      fAxMyNjTE7jR0c/KpQ7q6pspX7kyrJPGxYY4CZ5FPj75W9zmbLo6Wnl4TRlXrlwhPS2NpQ8/
      QfXHJ5GlVEyMMzE+ijXOhtEAJRs30fhpE4oWJBRwk2ixkJMVRzCokbFsGw2ffMD2J57m7Il3
      6Q+G+NrmlZy80EBSpgPvYDsSkJtiZsAjYbba0Dw9BLGQWbSSTSuKov2RxBTiJHiWsSamsnHT
      JooKsunv6yM1PR0dKjXXPiXPXspwXxeayUZhXi6Z+UVkpaeSYLWSEG/FlhBPalo6toQELIlp
      tHb2IgEbV5dTWfkRJKZj1QJ8Wt1MiT0bZ1sj8SkZpNjMDHo0lpYV4xnsJCE9H3N8CoU5ol/7
      bogRYI5pq7lEYvFG0kweLld3sGHd8vtuM9LXxbX6Vh7eug2L4Y/Xzy9dvsTGDRvxunpoHdZY
      WZo3m9YXHJIkSf8fQVmi0cVfCm0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Happening Oppose Scenario' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      va2MlC3eG/8//Kep7bJ2ZxYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Voting preference' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
